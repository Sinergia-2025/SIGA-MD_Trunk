<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tstBarra.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Zc3NOLs3AAAAAElFTkSuQmCC
</value>
  </data>
</root>
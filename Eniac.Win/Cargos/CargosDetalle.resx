<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAAKAQkUFAIU
        JhYAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAAGAAAADAIQHRgTQ14yJ22MVjmM
        qoNIpcCzQ5+9tx1ghVoFGSYUAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAABgAAAA4FHjAeFkxpOCdwkmA1iqyPQJu8u0io
        xeFNrMf3TarD/1WzyP9awNX/LH2m8yFrlI0BCQ4eAAAADAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAwcQCSk9IhhUdEAlcZdqL4atmTiVu8c/n8PnRaXG+0io
        xf9JrMX/SrPI/07C0f9V1uD/VsPS/1S1zf8vf6b/KXumywYZJS4AAAAaAAAACgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAea5UkJXiibimDrqUwjrrNNpfB7TyexP1BpMb/Rq3J/0y8
        0P9Tztz/WuLp/2Dy9f9k/P3/Zv///2b///9n7/P/VLTM/zCBqP8qga3FCzFIGAAAAAgAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkR+Bi6OvKU3nMb/PaPJ/0Suzf9MwNb/Vdbi/1zo
        7/9i9/n/Zf7+/2b///9m////Zf///2X///9l////Zf///2n9/f9cw9f/MIOr/yyFssEYbqQKAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2ItChMudObVsvf7WHe6v9o7vT/a/n7/2z/
        //9p////Zv///2P+//9j/v//Y/7//2P+//9k/v//Zf///2X///9l////aP///2XV5P8xh67/LIe0wRhv
        pwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALYezHGLa6NF3////dP///3H+
        //9v/v//bP3//2j9//9j/P//X/r//1r5//9W+P//VPf//1P2//9U9v//Vff//1j5//9e/P//Z9/s/zOM
        s/8sirfBF22lCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATr7XdG3z
        +v9v+v//bfr//2v6//9n+f//Yvj//173//9b9///WPb//1T2//9Q9P//S/L//0fw//9E7v//Qu7//0Pv
        //9a3fH/NJK5/yuMucEXa6MKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA4m8AwYePx62r3//9o9v//Zfb//2P2//9g9v//WvT//1Px//9P8P//TPD//0vw//9L8f//SvH//0Xv
        //8/7P//Our//1bb8v80l73/Ko+7wRdooQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACR5qRRY2OvRZPT//2Lz//9g8///XvP//1zz//9a8///VPH//0rt//9F7P//Qer//z7q
        //896v//P+z//0Lu//9B7///W97z/zSbw/8pkb7BF2aeCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAGGGZClHT6sNd7///XO///1rv//9Y7///Vu///1Xv//9T7///Tu7//0Tq
        //9B6f//Q+v//0Hs//885vr/PNzw/0LW6f9fzN//NJm9/yaQvcETYpwKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWXJYKTNHqv1bs//9V7P//U+z//1Ls//9Q7P//Tuv//07s
        //9a8f//aPj//2H3//9S7Pn/X9fj/4TFzf+SuLX/jK+j/4uon/99mp//aY6i14SMlTIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABldlQpGzuq/Tuj//03o//9M6P//Sej//0no
        //9W7f//bff//3z+//99////dfT1/4vU2f+pw7X/b7Fq/z2vPf8stTT/MLg//0a0Vv9vqXf/l6CZ3ZqX
        mlyKjYsEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGF2UCkzP6r9O5///SOX//0rn
        //9W6///bvT//4L9//+G////g////335+f+a2Nr/pcCi/zehKv8VqQ//Jbgo/1zIZf9XzGj/K8lJ/yrG
        Sv9LtF7/kqOU7ZqWmVgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVZQIddvqv4r6
        //+C+P//hfr//43+//+P////jf///4r///+G////jeTl/7DEtf81lSP/FZsE/xmnEv9FuUf/xczG/7jS
        vf88y1v/LcpS/yfIRf9Ksln/mJ+Y1ZWRlCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABT
        lAh53eq/mf///5n///+Y////lv///5P///+Q////jv///4j4+P+u1df/cKJi/xeLAP8YlQP/F6EN/0W0
        RP+9wr3/ssq2/znHUv8oxkb/JcZA/yHBNP9wpnX/nZicdgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAFOUCHnc6r+Y////mP///5j///+Y////l////5T///+S////ju/v/7jKxv9GkDL/IosJ/zid
        Jv83pi3/WrRX/7W6tf+uwbD/TsVe/0DFU/88xk3/IMIu/0euTf+enp63l5SXCgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAU5QIedzqv5j///+Y////mP///5j///+Y////mP///5X///+W6er/vcjC/2+o
        XP96tGv/1uHV/8rVyf/AycD/urq6/7W3tf+yvrP/t8S4/7bLuP9CxEf/MbEz/5ylnNGZlJkWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABSlAh43Oq/mP///5j///+Y////mP///5j///+Y////l////5np
        6v++yMT/n8CR/7XUq//s8er/1+DV/83VzP/Mzcz/vb+9/624rf+vu67/r8Ku/z68PP8xri7/oqqi0ZqV
        mhYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFKUCHjc6r+Y////mP///5j///+Y////mP///5j/
        //+Y////le/v/7rJyP+wxab/o8eU/6DIk/96tmv/e7dv/93g3P/B0sD/Sa5A/zuuMv89szT/KLMd/1St
        Tf+wsLC3kI6RCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUpQKeNzqv5j///+Y////mf///5r/
        //+b////nP///57///+c+Pj/stDR/73Ft/+uzKD/oMWR/5PAg/+hy5T/8/Xz/9ro2P9kt1X/T7NA/0m0
        Of8+sC//j7eK/7ayt3YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGiwh32Oe5mPz+/5b5
        /f+R9fv/ivD5/4Dq9/924/T/a93y/1vV7v9gv9b/tMDB/73MtP+wzqP/oseU/6/Qo//5+/j/5/Lk/3+/
        cP9ouFf/WbVJ/3O0af/Axb/VpqOmJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF2z
        z0hSv92/PcLk9zTB5f8tvOL9J7ff9SSy2+kirtjXIKrVxSCgy62Pr7yzw8TA977Mt/+0z6j/rM6f/73Z
        s/+u06P/hb91/3e5aP+Ft3v/wcq/7by6vFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAxrpA4clMNSIJvIcCCWxFggj74+IIa3KB55rBgbZZsMABFaAqutsAzCwsJ+w8PD68DH
        vf+5yrL/r8ml/6XEmv+iwJn/sMOr/8nLyN3Av8FceHp4BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK+v
        rgTAwME+xcXGmcfHx8/IycflycrI4czLy8fLycuHubi5LAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACvr68EvLy8Fr+/vya+vr8ktrW2EJCQkAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////////////+P///4A///gAP/+AAD/+AAA//AAAP/wA
        AD/+AAA//gAAP/4AAD/+AAA//gAAP/4AAB/+AAAP/gAAB/4AAAf+AAAD/gAAA/4AAAP+AAAD/gAAB/4A
        AAf/AAAP///gH///8D////////////////8=
</value>
  </data>
</root>
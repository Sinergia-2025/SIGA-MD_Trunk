<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEliminar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnInsertar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
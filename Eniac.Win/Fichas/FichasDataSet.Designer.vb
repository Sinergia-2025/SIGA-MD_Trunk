'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34014
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("SistemaDataSet"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class FichasDataSet
   Inherits Global.System.Data.DataSet

   Private tableFichasProductos As FichasProductosDataTable

   Private tablePagosPendientes As PagosPendientesDataTable

   Private tableFichasPagos As FichasPagosDataTable

   Private tableFichasEmitidas As FichasEmitidasDataTable

   Private tableIngresosPorFichas As IngresosPorFichasDataTable

   Private tableResumenPorCategoriaFiscal As ResumenPorCategoriaFiscalDataTable

   Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Sub New()
      MyBase.New()
      Me.BeginInit()
      Me.InitClass()
      Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
      AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
      AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
      Me.EndInit()
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
      MyBase.New(info, context, False)
      If (Me.IsBinarySerialized(info, context) = True) Then
         Me.InitVars(False)
         Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
         AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
         AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
         Return
      End If
      Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
      If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
         Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
         ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
         If (Not (ds.Tables("FichasProductos")) Is Nothing) Then
            MyBase.Tables.Add(New FichasProductosDataTable(ds.Tables("FichasProductos")))
         End If
         If (Not (ds.Tables("PagosPendientes")) Is Nothing) Then
            MyBase.Tables.Add(New PagosPendientesDataTable(ds.Tables("PagosPendientes")))
         End If
         If (Not (ds.Tables("FichasPagos")) Is Nothing) Then
            MyBase.Tables.Add(New FichasPagosDataTable(ds.Tables("FichasPagos")))
         End If
         If (Not (ds.Tables("FichasEmitidas")) Is Nothing) Then
            MyBase.Tables.Add(New FichasEmitidasDataTable(ds.Tables("FichasEmitidas")))
         End If
         If (Not (ds.Tables("IngresosPorFichas")) Is Nothing) Then
            MyBase.Tables.Add(New IngresosPorFichasDataTable(ds.Tables("IngresosPorFichas")))
         End If
         If (Not (ds.Tables("ResumenPorCategoriaFiscal")) Is Nothing) Then
            MyBase.Tables.Add(New ResumenPorCategoriaFiscalDataTable(ds.Tables("ResumenPorCategoriaFiscal")))
         End If
         Me.DataSetName = ds.DataSetName
         Me.Prefix = ds.Prefix
         Me.Namespace = ds.Namespace
         Me.Locale = ds.Locale
         Me.CaseSensitive = ds.CaseSensitive
         Me.EnforceConstraints = ds.EnforceConstraints
         Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
         Me.InitVars()
      Else
         Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
      End If
      Me.GetSerializationData(info, context)
      Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
      AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
      AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
    Global.System.ComponentModel.Browsable(False), _
    Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
   Public ReadOnly Property FichasProductos() As FichasProductosDataTable
      Get
         Return Me.tableFichasProductos
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
    Global.System.ComponentModel.Browsable(False), _
    Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
   Public ReadOnly Property PagosPendientes() As PagosPendientesDataTable
      Get
         Return Me.tablePagosPendientes
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
    Global.System.ComponentModel.Browsable(False), _
    Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
   Public ReadOnly Property FichasPagos() As FichasPagosDataTable
      Get
         Return Me.tableFichasPagos
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
    Global.System.ComponentModel.Browsable(False), _
    Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
   Public ReadOnly Property FichasEmitidas() As FichasEmitidasDataTable
      Get
         Return Me.tableFichasEmitidas
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
    Global.System.ComponentModel.Browsable(False), _
    Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
   Public ReadOnly Property IngresosPorFichas() As IngresosPorFichasDataTable
      Get
         Return Me.tableIngresosPorFichas
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
    Global.System.ComponentModel.Browsable(False), _
    Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
   Public ReadOnly Property ResumenPorCategoriaFiscal() As ResumenPorCategoriaFiscalDataTable
      Get
         Return Me.tableResumenPorCategoriaFiscal
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
    Global.System.ComponentModel.BrowsableAttribute(True), _
    Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
   Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
      Get
         Return Me._schemaSerializationMode
      End Get
      Set(value As Global.System.Data.SchemaSerializationMode)
         Me._schemaSerializationMode = value
      End Set
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
    Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
   Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
      Get
         Return MyBase.Tables
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
    Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
   Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
      Get
         Return MyBase.Relations
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Protected Overrides Sub InitializeDerivedDataSet()
      Me.BeginInit()
      Me.InitClass()
      Me.EndInit()
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Overrides Function Clone() As Global.System.Data.DataSet
      Dim cln As FichasDataSet = CType(MyBase.Clone, FichasDataSet)
      cln.InitVars()
      cln.SchemaSerializationMode = Me.SchemaSerializationMode
      Return cln
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Protected Overrides Function ShouldSerializeTables() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Protected Overrides Function ShouldSerializeRelations() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
      If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
         Me.Reset()
         Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
         ds.ReadXml(reader)
         If (Not (ds.Tables("FichasProductos")) Is Nothing) Then
            MyBase.Tables.Add(New FichasProductosDataTable(ds.Tables("FichasProductos")))
         End If
         If (Not (ds.Tables("PagosPendientes")) Is Nothing) Then
            MyBase.Tables.Add(New PagosPendientesDataTable(ds.Tables("PagosPendientes")))
         End If
         If (Not (ds.Tables("FichasPagos")) Is Nothing) Then
            MyBase.Tables.Add(New FichasPagosDataTable(ds.Tables("FichasPagos")))
         End If
         If (Not (ds.Tables("FichasEmitidas")) Is Nothing) Then
            MyBase.Tables.Add(New FichasEmitidasDataTable(ds.Tables("FichasEmitidas")))
         End If
         If (Not (ds.Tables("IngresosPorFichas")) Is Nothing) Then
            MyBase.Tables.Add(New IngresosPorFichasDataTable(ds.Tables("IngresosPorFichas")))
         End If
         If (Not (ds.Tables("ResumenPorCategoriaFiscal")) Is Nothing) Then
            MyBase.Tables.Add(New ResumenPorCategoriaFiscalDataTable(ds.Tables("ResumenPorCategoriaFiscal")))
         End If
         Me.DataSetName = ds.DataSetName
         Me.Prefix = ds.Prefix
         Me.Namespace = ds.Namespace
         Me.Locale = ds.Locale
         Me.CaseSensitive = ds.CaseSensitive
         Me.EnforceConstraints = ds.EnforceConstraints
         Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
         Me.InitVars()
      Else
         Me.ReadXml(reader)
         Me.InitVars()
      End If
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
      Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
      Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
      stream.Position = 0
      Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Friend Overloads Sub InitVars()
      Me.InitVars(True)
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Friend Overloads Sub InitVars(ByVal initTable As Boolean)
      Me.tableFichasProductos = CType(MyBase.Tables("FichasProductos"), FichasProductosDataTable)
      If (initTable = True) Then
         If (Not (Me.tableFichasProductos) Is Nothing) Then
            Me.tableFichasProductos.InitVars()
         End If
      End If
      Me.tablePagosPendientes = CType(MyBase.Tables("PagosPendientes"), PagosPendientesDataTable)
      If (initTable = True) Then
         If (Not (Me.tablePagosPendientes) Is Nothing) Then
            Me.tablePagosPendientes.InitVars()
         End If
      End If
      Me.tableFichasPagos = CType(MyBase.Tables("FichasPagos"), FichasPagosDataTable)
      If (initTable = True) Then
         If (Not (Me.tableFichasPagos) Is Nothing) Then
            Me.tableFichasPagos.InitVars()
         End If
      End If
      Me.tableFichasEmitidas = CType(MyBase.Tables("FichasEmitidas"), FichasEmitidasDataTable)
      If (initTable = True) Then
         If (Not (Me.tableFichasEmitidas) Is Nothing) Then
            Me.tableFichasEmitidas.InitVars()
         End If
      End If
      Me.tableIngresosPorFichas = CType(MyBase.Tables("IngresosPorFichas"), IngresosPorFichasDataTable)
      If (initTable = True) Then
         If (Not (Me.tableIngresosPorFichas) Is Nothing) Then
            Me.tableIngresosPorFichas.InitVars()
         End If
      End If
      Me.tableResumenPorCategoriaFiscal = CType(MyBase.Tables("ResumenPorCategoriaFiscal"), ResumenPorCategoriaFiscalDataTable)
      If (initTable = True) Then
         If (Not (Me.tableResumenPorCategoriaFiscal) Is Nothing) Then
            Me.tableResumenPorCategoriaFiscal.InitVars()
         End If
      End If
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Private Sub InitClass()
      Me.DataSetName = "SistemaDataSet"
      Me.Prefix = ""
      Me.Namespace = "http://tempuri.org/SistemaDataSet.xsd"
      Me.EnforceConstraints = True
      Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
      Me.tableFichasProductos = New FichasProductosDataTable()
      MyBase.Tables.Add(Me.tableFichasProductos)
      Me.tablePagosPendientes = New PagosPendientesDataTable()
      MyBase.Tables.Add(Me.tablePagosPendientes)
      Me.tableFichasPagos = New FichasPagosDataTable()
      MyBase.Tables.Add(Me.tableFichasPagos)
      Me.tableFichasEmitidas = New FichasEmitidasDataTable()
      MyBase.Tables.Add(Me.tableFichasEmitidas)
      Me.tableIngresosPorFichas = New IngresosPorFichasDataTable()
      MyBase.Tables.Add(Me.tableIngresosPorFichas)
      Me.tableResumenPorCategoriaFiscal = New ResumenPorCategoriaFiscalDataTable()
      MyBase.Tables.Add(Me.tableResumenPorCategoriaFiscal)
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Private Function ShouldSerializeFichasProductos() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Private Function ShouldSerializePagosPendientes() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Private Function ShouldSerializeFichasPagos() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Private Function ShouldSerializeFichasEmitidas() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Private Function ShouldSerializeIngresosPorFichas() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Private Function ShouldSerializeResumenPorCategoriaFiscal() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
      If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
         Me.InitVars()
      End If
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
    Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
      Dim ds As FichasDataSet = New FichasDataSet()
      Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
      Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
      Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
      any.Namespace = ds.Namespace
      sequence.Items.Add(any)
      type.Particle = sequence
      Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
      If xs.Contains(dsSchema.TargetNamespace) Then
         Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
         Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
         Try
            Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
            dsSchema.Write(s1)
            Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
            Do While schemas.MoveNext
               schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
               s2.SetLength(0)
               schema.Write(s2)
               If (s1.Length = s2.Length) Then
                  s1.Position = 0
                  s2.Position = 0

                  Do While ((s1.Position <> s1.Length) _
                              AndAlso (s1.ReadByte = s2.ReadByte))


                  Loop
                  If (s1.Position = s1.Length) Then
                     Return type
                  End If
               End If

            Loop
         Finally
            If (Not (s1) Is Nothing) Then
               s1.Close()
            End If
            If (Not (s2) Is Nothing) Then
               s2.Close()
            End If
         End Try
      End If
      xs.Add(dsSchema)
      Return type
   End Function

   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Delegate Sub FichasProductosRowChangeEventHandler(ByVal sender As Object, ByVal e As FichasProductosRowChangeEvent)

   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Delegate Sub PagosPendientesRowChangeEventHandler(ByVal sender As Object, ByVal e As PagosPendientesRowChangeEvent)

   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Delegate Sub FichasPagosRowChangeEventHandler(ByVal sender As Object, ByVal e As FichasPagosRowChangeEvent)

   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Delegate Sub FichasEmitidasRowChangeEventHandler(ByVal sender As Object, ByVal e As FichasEmitidasRowChangeEvent)

   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Delegate Sub IngresosPorFichasRowChangeEventHandler(ByVal sender As Object, ByVal e As IngresosPorFichasRowChangeEvent)

   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Delegate Sub ResumenPorCategoriaFiscalRowChangeEventHandler(ByVal sender As Object, ByVal e As ResumenPorCategoriaFiscalRowChangeEvent)

   '''<summary>
   '''Represents the strongly named DataTable class.
   '''</summary>
   <Global.System.Serializable(), _
    Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
   Partial Public Class FichasProductosDataTable
      Inherits Global.System.Data.TypedTableBase(Of FichasProductosRow)

      Private columnProductoDesc As Global.System.Data.DataColumn

      Private columnCantidad As Global.System.Data.DataColumn

      Private columnPrecio As Global.System.Data.DataColumn

      Private columnMarca As Global.System.Data.DataColumn

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub New()
         MyBase.New()
         Me.TableName = "FichasProductos"
         Me.BeginInit()
         Me.InitClass()
         Me.EndInit()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal table As Global.System.Data.DataTable)
         MyBase.New()
         Me.TableName = table.TableName
         If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
            Me.CaseSensitive = table.CaseSensitive
         End If
         If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
            Me.Locale = table.Locale
         End If
         If (table.Namespace <> table.DataSet.Namespace) Then
            Me.Namespace = table.Namespace
         End If
         Me.Prefix = table.Prefix
         Me.MinimumCapacity = table.MinimumCapacity
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
         MyBase.New(info, context)
         Me.InitVars()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property ProductoDescColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnProductoDesc
         End Get
      End Property
      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property MarcaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnMarca
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnCantidad
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property PrecioColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPrecio
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
       Global.System.ComponentModel.Browsable(False)> _
      Public ReadOnly Property Count() As Integer
         Get
            Return Me.Rows.Count
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Default Public ReadOnly Property Item(ByVal index As Integer) As FichasProductosRow
         Get
            Return CType(Me.Rows(index), FichasProductosRow)
         End Get
      End Property

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event FichasProductosRowChanging As FichasProductosRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event FichasProductosRowChanged As FichasProductosRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event FichasProductosRowDeleting As FichasProductosRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event FichasProductosRowDeleted As FichasProductosRowChangeEventHandler

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overloads Sub AddFichasProductosRow(ByVal row As FichasProductosRow)
         Me.Rows.Add(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overloads Function AddFichasProductosRow(ByVal ProductoDesc As String, ByVal Cantidad As Integer, ByVal Precio As Double) As FichasProductosRow
         Dim rowFichasProductosRow As FichasProductosRow = CType(Me.NewRow, FichasProductosRow)
         Dim columnValuesArray() As Object = New Object() {ProductoDesc, Cantidad, Precio}
         rowFichasProductosRow.ItemArray = columnValuesArray
         Me.Rows.Add(rowFichasProductosRow)
         Return rowFichasProductosRow
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overrides Function Clone() As Global.System.Data.DataTable
         Dim cln As FichasProductosDataTable = CType(MyBase.Clone, FichasProductosDataTable)
         cln.InitVars()
         Return cln
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
         Return New FichasProductosDataTable()
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub InitVars()
         Me.columnProductoDesc = MyBase.Columns("ProductoDesc")
         Me.columnCantidad = MyBase.Columns("Cantidad")
         Me.columnPrecio = MyBase.Columns("Precio")
         Me.columnMarca = MyBase.Columns("Marca")
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Private Sub InitClass()
         Me.columnProductoDesc = New Global.System.Data.DataColumn("ProductoDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnProductoDesc)
         Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnCantidad)
         Me.columnPrecio = New Global.System.Data.DataColumn("Precio", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPrecio)
         Me.columnMarca = New Global.System.Data.DataColumn("Marca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnMarca)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function NewFichasProductosRow() As FichasProductosRow
         Return CType(Me.NewRow, FichasProductosRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
         Return New FichasProductosRow(builder)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function GetRowType() As Global.System.Type
         Return GetType(FichasProductosRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanged(e)
         If (Not (Me.FichasProductosRowChangedEvent) Is Nothing) Then
            RaiseEvent FichasProductosRowChanged(Me, New FichasProductosRowChangeEvent(CType(e.Row, FichasProductosRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanging(e)
         If (Not (Me.FichasProductosRowChangingEvent) Is Nothing) Then
            RaiseEvent FichasProductosRowChanging(Me, New FichasProductosRowChangeEvent(CType(e.Row, FichasProductosRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleted(e)
         If (Not (Me.FichasProductosRowDeletedEvent) Is Nothing) Then
            RaiseEvent FichasProductosRowDeleted(Me, New FichasProductosRowChangeEvent(CType(e.Row, FichasProductosRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleting(e)
         If (Not (Me.FichasProductosRowDeletingEvent) Is Nothing) Then
            RaiseEvent FichasProductosRowDeleting(Me, New FichasProductosRowChangeEvent(CType(e.Row, FichasProductosRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub RemoveFichasProductosRow(ByVal row As FichasProductosRow)
         Me.Rows.Remove(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
         Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
         Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
         Dim ds As FichasDataSet = New FichasDataSet()
         Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any1.Namespace = "http://www.w3.org/2001/XMLSchema"
         any1.MinOccurs = New Decimal(0)
         any1.MaxOccurs = Decimal.MaxValue
         any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any1)
         Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
         any2.MinOccurs = New Decimal(1)
         any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any2)
         Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute1.Name = "namespace"
         attribute1.FixedValue = ds.Namespace
         type.Attributes.Add(attribute1)
         Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute2.Name = "tableTypeName"
         attribute2.FixedValue = "FichasProductosDataTable"
         type.Attributes.Add(attribute2)
         type.Particle = sequence
         Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
         If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
               Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
               dsSchema.Write(s1)
               Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
               Do While schemas.MoveNext
                  schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                  s2.SetLength(0)
                  schema.Write(s2)
                  If (s1.Length = s2.Length) Then
                     s1.Position = 0
                     s2.Position = 0

                     Do While ((s1.Position <> s1.Length) _
                                 AndAlso (s1.ReadByte = s2.ReadByte))


                     Loop
                     If (s1.Position = s1.Length) Then
                        Return type
                     End If
                  End If

               Loop
            Finally
               If (Not (s1) Is Nothing) Then
                  s1.Close()
               End If
               If (Not (s2) Is Nothing) Then
                  s2.Close()
               End If
            End Try
         End If
         xs.Add(dsSchema)
         Return type
      End Function
   End Class

   '''<summary>
   '''Represents the strongly named DataTable class.
   '''</summary>
   <Global.System.Serializable(), _
    Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
   Partial Public Class PagosPendientesDataTable
      Inherits Global.System.Data.TypedTableBase(Of PagosPendientesRow)

      Private columnNroOperacion As Global.System.Data.DataColumn

      Private columnTipoDocumento As Global.System.Data.DataColumn

      Private columnNroDocumento As Global.System.Data.DataColumn

      Private columnNroCuota As Global.System.Data.DataColumn

      Private columnFechaVencimiento As Global.System.Data.DataColumn

      Private columnImporte As Global.System.Data.DataColumn

      Private columnSaldo As Global.System.Data.DataColumn

      Private columnNombreCliente As Global.System.Data.DataColumn

      Private columnDireccion As Global.System.Data.DataColumn

      Private columnTelefono As Global.System.Data.DataColumn

      Private columnCelular As Global.System.Data.DataColumn

      Private columnProducto As Global.System.Data.DataColumn

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub New()
         MyBase.New()
         Me.TableName = "PagosPendientes"
         Me.BeginInit()
         Me.InitClass()
         Me.EndInit()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal table As Global.System.Data.DataTable)
         MyBase.New()
         Me.TableName = table.TableName
         If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
            Me.CaseSensitive = table.CaseSensitive
         End If
         If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
            Me.Locale = table.Locale
         End If
         If (table.Namespace <> table.DataSet.Namespace) Then
            Me.Namespace = table.Namespace
         End If
         Me.Prefix = table.Prefix
         Me.MinimumCapacity = table.MinimumCapacity
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
         MyBase.New(info, context)
         Me.InitVars()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroOperacionColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroOperacion
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property TipoDocumentoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnTipoDocumento
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroDocumentoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroDocumento
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroCuotaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroCuota
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property FechaVencimientoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnFechaVencimiento
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property ImporteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnImporte
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property SaldoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnSaldo
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NombreClienteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreCliente
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property DireccionColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnDireccion
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property TelefonoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnTelefono
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property CelularColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnCelular
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property ProductoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnProducto
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
       Global.System.ComponentModel.Browsable(False)> _
      Public ReadOnly Property Count() As Integer
         Get
            Return Me.Rows.Count
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Default Public ReadOnly Property Item(ByVal index As Integer) As PagosPendientesRow
         Get
            Return CType(Me.Rows(index), PagosPendientesRow)
         End Get
      End Property

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event PagosPendientesRowChanging As PagosPendientesRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event PagosPendientesRowChanged As PagosPendientesRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event PagosPendientesRowDeleting As PagosPendientesRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event PagosPendientesRowDeleted As PagosPendientesRowChangeEventHandler

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overloads Sub AddPagosPendientesRow(ByVal row As PagosPendientesRow)
         Me.Rows.Add(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overloads Function AddPagosPendientesRow(ByVal NroOperacion As Integer, ByVal TipoDocumento As String, ByVal NroDocumento As String, ByVal NroCuota As Integer, ByVal FechaVencimiento As Date, ByVal Importe As Decimal, ByVal Saldo As Decimal, ByVal NombreCliente As String, ByVal Direccion As String, ByVal Telefono As String, ByVal Celular As String, ByVal Producto As String) As PagosPendientesRow
         Dim rowPagosPendientesRow As PagosPendientesRow = CType(Me.NewRow, PagosPendientesRow)
         Dim columnValuesArray() As Object = New Object() {NroOperacion, TipoDocumento, NroDocumento, NroCuota, FechaVencimiento, Importe, Saldo, NombreCliente, Direccion, Telefono, Celular, Producto}
         rowPagosPendientesRow.ItemArray = columnValuesArray
         Me.Rows.Add(rowPagosPendientesRow)
         Return rowPagosPendientesRow
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overrides Function Clone() As Global.System.Data.DataTable
         Dim cln As PagosPendientesDataTable = CType(MyBase.Clone, PagosPendientesDataTable)
         cln.InitVars()
         Return cln
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
         Return New PagosPendientesDataTable()
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub InitVars()
         Me.columnNroOperacion = MyBase.Columns("NroOperacion")
         Me.columnTipoDocumento = MyBase.Columns("TipoDocumento")
         Me.columnNroDocumento = MyBase.Columns("NroDocumento")
         Me.columnNroCuota = MyBase.Columns("NroCuota")
         Me.columnFechaVencimiento = MyBase.Columns("FechaVencimiento")
         Me.columnImporte = MyBase.Columns("Importe")
         Me.columnSaldo = MyBase.Columns("Saldo")
         Me.columnNombreCliente = MyBase.Columns("NombreCliente")
         Me.columnDireccion = MyBase.Columns("Direccion")
         Me.columnTelefono = MyBase.Columns("Telefono")
         Me.columnCelular = MyBase.Columns("Celular")
         Me.columnProducto = MyBase.Columns("Producto")
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Private Sub InitClass()
         Me.columnNroOperacion = New Global.System.Data.DataColumn("NroOperacion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroOperacion)
         Me.columnTipoDocumento = New Global.System.Data.DataColumn("TipoDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnTipoDocumento)
         Me.columnNroDocumento = New Global.System.Data.DataColumn("NroDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroDocumento)
         Me.columnNroCuota = New Global.System.Data.DataColumn("NroCuota", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroCuota)
         Me.columnFechaVencimiento = New Global.System.Data.DataColumn("FechaVencimiento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFechaVencimiento)
         Me.columnImporte = New Global.System.Data.DataColumn("Importe", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnImporte)
         Me.columnSaldo = New Global.System.Data.DataColumn("Saldo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnSaldo)
         Me.columnNombreCliente = New Global.System.Data.DataColumn("NombreCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreCliente)
         Me.columnDireccion = New Global.System.Data.DataColumn("Direccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnDireccion)
         Me.columnTelefono = New Global.System.Data.DataColumn("Telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnTelefono)
         Me.columnCelular = New Global.System.Data.DataColumn("Celular", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnCelular)
         Me.columnProducto = New Global.System.Data.DataColumn("Producto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnProducto)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function NewPagosPendientesRow() As PagosPendientesRow
         Return CType(Me.NewRow, PagosPendientesRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
         Return New PagosPendientesRow(builder)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function GetRowType() As Global.System.Type
         Return GetType(PagosPendientesRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanged(e)
         If (Not (Me.PagosPendientesRowChangedEvent) Is Nothing) Then
            RaiseEvent PagosPendientesRowChanged(Me, New PagosPendientesRowChangeEvent(CType(e.Row, PagosPendientesRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanging(e)
         If (Not (Me.PagosPendientesRowChangingEvent) Is Nothing) Then
            RaiseEvent PagosPendientesRowChanging(Me, New PagosPendientesRowChangeEvent(CType(e.Row, PagosPendientesRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleted(e)
         If (Not (Me.PagosPendientesRowDeletedEvent) Is Nothing) Then
            RaiseEvent PagosPendientesRowDeleted(Me, New PagosPendientesRowChangeEvent(CType(e.Row, PagosPendientesRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleting(e)
         If (Not (Me.PagosPendientesRowDeletingEvent) Is Nothing) Then
            RaiseEvent PagosPendientesRowDeleting(Me, New PagosPendientesRowChangeEvent(CType(e.Row, PagosPendientesRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub RemovePagosPendientesRow(ByVal row As PagosPendientesRow)
         Me.Rows.Remove(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
         Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
         Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
         Dim ds As FichasDataSet = New FichasDataSet()
         Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any1.Namespace = "http://www.w3.org/2001/XMLSchema"
         any1.MinOccurs = New Decimal(0)
         any1.MaxOccurs = Decimal.MaxValue
         any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any1)
         Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
         any2.MinOccurs = New Decimal(1)
         any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any2)
         Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute1.Name = "namespace"
         attribute1.FixedValue = ds.Namespace
         type.Attributes.Add(attribute1)
         Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute2.Name = "tableTypeName"
         attribute2.FixedValue = "PagosPendientesDataTable"
         type.Attributes.Add(attribute2)
         type.Particle = sequence
         Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
         If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
               Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
               dsSchema.Write(s1)
               Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
               Do While schemas.MoveNext
                  schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                  s2.SetLength(0)
                  schema.Write(s2)
                  If (s1.Length = s2.Length) Then
                     s1.Position = 0
                     s2.Position = 0

                     Do While ((s1.Position <> s1.Length) _
                                 AndAlso (s1.ReadByte = s2.ReadByte))


                     Loop
                     If (s1.Position = s1.Length) Then
                        Return type
                     End If
                  End If

               Loop
            Finally
               If (Not (s1) Is Nothing) Then
                  s1.Close()
               End If
               If (Not (s2) Is Nothing) Then
                  s2.Close()
               End If
            End Try
         End If
         xs.Add(dsSchema)
         Return type
      End Function
   End Class

   '''<summary>
   '''Represents the strongly named DataTable class.
   '''</summary>
   <Global.System.Serializable(), _
    Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
   Partial Public Class FichasPagosDataTable
      Inherits Global.System.Data.TypedTableBase(Of FichasPagosRow)

      Private columnNroOperacion As Global.System.Data.DataColumn

      Private columnIdCliente As Global.System.Data.DataColumn

      Private columnTipoDocumento As Global.System.Data.DataColumn

      Private columnNroDocumento As Global.System.Data.DataColumn

      Private columnNroCuota As Global.System.Data.DataColumn

      Private columnFechaVencimiento As Global.System.Data.DataColumn

      Private columnImporte As Global.System.Data.DataColumn

      Private columnSaldo As Global.System.Data.DataColumn

      Private columnNroCuota1 As Global.System.Data.DataColumn

      Private columnFechaVencimiento1 As Global.System.Data.DataColumn

      Private columnImporte1 As Global.System.Data.DataColumn

      Private columnSaldo1 As Global.System.Data.DataColumn

      Private columnNroCuota2 As Global.System.Data.DataColumn

      Private columnFechaVencimiento2 As Global.System.Data.DataColumn

      Private columnImporte2 As Global.System.Data.DataColumn

      Private columnSaldo2 As Global.System.Data.DataColumn

      Private columnNroCuota3 As Global.System.Data.DataColumn

      Private columnFechaVencimiento3 As Global.System.Data.DataColumn

      Private columnImporte3 As Global.System.Data.DataColumn

      Private columnSaldo3 As Global.System.Data.DataColumn

      Private columnNroCuota4 As Global.System.Data.DataColumn

      Private columnFechaVencimiento4 As Global.System.Data.DataColumn

      Private columnImporte4 As Global.System.Data.DataColumn

      Private columnSaldo4 As Global.System.Data.DataColumn

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub New()
         MyBase.New()
         Me.TableName = "FichasPagos"
         Me.BeginInit()
         Me.InitClass()
         Me.EndInit()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal table As Global.System.Data.DataTable)
         MyBase.New()
         Me.TableName = table.TableName
         If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
            Me.CaseSensitive = table.CaseSensitive
         End If
         If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
            Me.Locale = table.Locale
         End If
         If (table.Namespace <> table.DataSet.Namespace) Then
            Me.Namespace = table.Namespace
         End If
         Me.Prefix = table.Prefix
         Me.MinimumCapacity = table.MinimumCapacity
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
         MyBase.New(info, context)
         Me.InitVars()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroOperacionColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroOperacion
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
      Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property IdClienteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdCliente
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property TipoDocumentoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnTipoDocumento
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroDocumentoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroDocumento
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroCuotaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroCuota
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property FechaVencimientoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnFechaVencimiento
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property ImporteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnImporte
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property SaldoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnSaldo
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroCuota1Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroCuota1
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property FechaVencimiento1Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnFechaVencimiento1
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Importe1Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnImporte1
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Saldo1Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnSaldo1
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroCuota2Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroCuota2
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property FechaVencimiento2Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnFechaVencimiento2
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Importe2Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnImporte2
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Saldo2Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnSaldo2
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroCuota3Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroCuota3
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property FechaVencimiento3Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnFechaVencimiento3
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Importe3Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnImporte3
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Saldo3Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnSaldo3
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroCuota4Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroCuota4
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property FechaVencimiento4Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnFechaVencimiento4
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Importe4Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnImporte4
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Saldo4Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnSaldo4
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
       Global.System.ComponentModel.Browsable(False)> _
      Public ReadOnly Property Count() As Integer
         Get
            Return Me.Rows.Count
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Default Public ReadOnly Property Item(ByVal index As Integer) As FichasPagosRow
         Get
            Return CType(Me.Rows(index), FichasPagosRow)
         End Get
      End Property

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event FichasPagosRowChanging As FichasPagosRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event FichasPagosRowChanged As FichasPagosRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event FichasPagosRowDeleting As FichasPagosRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event FichasPagosRowDeleted As FichasPagosRowChangeEventHandler

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overloads Sub AddFichasPagosRow(ByVal row As FichasPagosRow)
         Me.Rows.Add(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overloads Function AddFichasPagosRow( _
                    ByVal NroOperacion As Integer, _
                    ByVal TipoDocumento As String, _
                    ByVal NroDocumento As String, _
                    ByVal NroCuota As Integer, _
                    ByVal FechaVencimiento As Date, _
                    ByVal Importe As Decimal, _
                    ByVal Saldo As Decimal, _
                    ByVal NroCuota1 As Integer, _
                    ByVal FechaVencimiento1 As Date, _
                    ByVal Importe1 As Decimal, _
                    ByVal Saldo1 As Decimal, _
                    ByVal NroCuota2 As Integer, _
                    ByVal FechaVencimiento2 As Date, _
                    ByVal Importe2 As Decimal, _
                    ByVal Saldo2 As Decimal, _
                    ByVal NroCuota3 As Integer, _
                    ByVal FechaVencimiento3 As Date, _
                    ByVal Importe3 As Decimal, _
                    ByVal Saldo3 As Decimal, _
                    ByVal NroCuota4 As Integer, _
                    ByVal FechaVencimiento4 As Date, _
                    ByVal Importe4 As Decimal, _
                    ByVal Saldo4 As Decimal) As FichasPagosRow
         Dim rowFichasPagosRow As FichasPagosRow = CType(Me.NewRow, FichasPagosRow)
         Dim columnValuesArray() As Object = New Object() {NroOperacion, TipoDocumento, NroDocumento, NroCuota, FechaVencimiento, Importe, Saldo, NroCuota1, FechaVencimiento1, Importe1, Saldo1, NroCuota2, FechaVencimiento2, Importe2, Saldo2, NroCuota3, FechaVencimiento3, Importe3, Saldo3, NroCuota4, FechaVencimiento4, Importe4, Saldo4}
         rowFichasPagosRow.ItemArray = columnValuesArray
         Me.Rows.Add(rowFichasPagosRow)
         Return rowFichasPagosRow
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overrides Function Clone() As Global.System.Data.DataTable
         Dim cln As FichasPagosDataTable = CType(MyBase.Clone, FichasPagosDataTable)
         cln.InitVars()
         Return cln
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
         Return New FichasPagosDataTable()
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub InitVars()
         Me.columnNroOperacion = MyBase.Columns("NroOperacion")
         Me.columnTipoDocumento = MyBase.Columns("TipoDocumento")
         Me.columnNroDocumento = MyBase.Columns("NroDocumento")
         Me.columnNroCuota = MyBase.Columns("NroCuota")
         Me.columnFechaVencimiento = MyBase.Columns("FechaVencimiento")
         Me.columnImporte = MyBase.Columns("Importe")
         Me.columnSaldo = MyBase.Columns("Saldo")
         Me.columnNroCuota1 = MyBase.Columns("NroCuota1")
         Me.columnFechaVencimiento1 = MyBase.Columns("FechaVencimiento1")
         Me.columnImporte1 = MyBase.Columns("Importe1")
         Me.columnSaldo1 = MyBase.Columns("Saldo1")
         Me.columnNroCuota2 = MyBase.Columns("NroCuota2")
         Me.columnFechaVencimiento2 = MyBase.Columns("FechaVencimiento2")
         Me.columnImporte2 = MyBase.Columns("Importe2")
         Me.columnSaldo2 = MyBase.Columns("Saldo2")
         Me.columnNroCuota3 = MyBase.Columns("NroCuota3")
         Me.columnFechaVencimiento3 = MyBase.Columns("FechaVencimiento3")
         Me.columnImporte3 = MyBase.Columns("Importe3")
         Me.columnSaldo3 = MyBase.Columns("Saldo3")
         Me.columnNroCuota4 = MyBase.Columns("NroCuota4")
         Me.columnFechaVencimiento4 = MyBase.Columns("FechaVencimiento4")
         Me.columnImporte4 = MyBase.Columns("Importe4")
         Me.columnSaldo4 = MyBase.Columns("Saldo4")
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Private Sub InitClass()
         Me.columnNroOperacion = New Global.System.Data.DataColumn("NroOperacion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroOperacion)
         Me.columnTipoDocumento = New Global.System.Data.DataColumn("TipoDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnTipoDocumento)
         Me.columnNroDocumento = New Global.System.Data.DataColumn("NroDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroDocumento)
         Me.columnNroCuota = New Global.System.Data.DataColumn("NroCuota", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroCuota)
         Me.columnFechaVencimiento = New Global.System.Data.DataColumn("FechaVencimiento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFechaVencimiento)
         Me.columnImporte = New Global.System.Data.DataColumn("Importe", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnImporte)
         Me.columnSaldo = New Global.System.Data.DataColumn("Saldo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnSaldo)
         Me.columnNroCuota1 = New Global.System.Data.DataColumn("NroCuota1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroCuota1)
         Me.columnFechaVencimiento1 = New Global.System.Data.DataColumn("FechaVencimiento1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFechaVencimiento1)
         Me.columnImporte1 = New Global.System.Data.DataColumn("Importe1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnImporte1)
         Me.columnSaldo1 = New Global.System.Data.DataColumn("Saldo1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnSaldo1)
         Me.columnNroCuota2 = New Global.System.Data.DataColumn("NroCuota2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroCuota2)
         Me.columnFechaVencimiento2 = New Global.System.Data.DataColumn("FechaVencimiento2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFechaVencimiento2)
         Me.columnImporte2 = New Global.System.Data.DataColumn("Importe2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnImporte2)
         Me.columnSaldo2 = New Global.System.Data.DataColumn("Saldo2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnSaldo2)
         Me.columnNroCuota3 = New Global.System.Data.DataColumn("NroCuota3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroCuota3)
         Me.columnFechaVencimiento3 = New Global.System.Data.DataColumn("FechaVencimiento3", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFechaVencimiento3)
         Me.columnImporte3 = New Global.System.Data.DataColumn("Importe3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnImporte3)
         Me.columnSaldo3 = New Global.System.Data.DataColumn("Saldo3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnSaldo3)
         Me.columnNroCuota4 = New Global.System.Data.DataColumn("NroCuota4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroCuota4)
         Me.columnFechaVencimiento4 = New Global.System.Data.DataColumn("FechaVencimiento4", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFechaVencimiento4)
         Me.columnImporte4 = New Global.System.Data.DataColumn("Importe4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnImporte4)
         Me.columnSaldo4 = New Global.System.Data.DataColumn("Saldo4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnSaldo4)
         Me.columnNroOperacion.AllowDBNull = False
         Me.columnTipoDocumento.AllowDBNull = False
         Me.columnTipoDocumento.MaxLength = 5
         Me.columnNroDocumento.AllowDBNull = False
         Me.columnNroDocumento.MaxLength = 12
         Me.columnNroCuota.AllowDBNull = False
         Me.columnFechaVencimiento.AllowDBNull = False
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function NewFichasPagosRow() As FichasPagosRow
         Return CType(Me.NewRow, FichasPagosRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
         Return New FichasPagosRow(builder)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function GetRowType() As Global.System.Type
         Return GetType(FichasPagosRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanged(e)
         If (Not (Me.FichasPagosRowChangedEvent) Is Nothing) Then
            RaiseEvent FichasPagosRowChanged(Me, New FichasPagosRowChangeEvent(CType(e.Row, FichasPagosRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanging(e)
         If (Not (Me.FichasPagosRowChangingEvent) Is Nothing) Then
            RaiseEvent FichasPagosRowChanging(Me, New FichasPagosRowChangeEvent(CType(e.Row, FichasPagosRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleted(e)
         If (Not (Me.FichasPagosRowDeletedEvent) Is Nothing) Then
            RaiseEvent FichasPagosRowDeleted(Me, New FichasPagosRowChangeEvent(CType(e.Row, FichasPagosRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleting(e)
         If (Not (Me.FichasPagosRowDeletingEvent) Is Nothing) Then
            RaiseEvent FichasPagosRowDeleting(Me, New FichasPagosRowChangeEvent(CType(e.Row, FichasPagosRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub RemoveFichasPagosRow(ByVal row As FichasPagosRow)
         Me.Rows.Remove(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
         Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
         Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
         Dim ds As FichasDataSet = New FichasDataSet()
         Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any1.Namespace = "http://www.w3.org/2001/XMLSchema"
         any1.MinOccurs = New Decimal(0)
         any1.MaxOccurs = Decimal.MaxValue
         any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any1)
         Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
         any2.MinOccurs = New Decimal(1)
         any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any2)
         Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute1.Name = "namespace"
         attribute1.FixedValue = ds.Namespace
         type.Attributes.Add(attribute1)
         Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute2.Name = "tableTypeName"
         attribute2.FixedValue = "FichasPagosDataTable"
         type.Attributes.Add(attribute2)
         type.Particle = sequence
         Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
         If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
               Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
               dsSchema.Write(s1)
               Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
               Do While schemas.MoveNext
                  schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                  s2.SetLength(0)
                  schema.Write(s2)
                  If (s1.Length = s2.Length) Then
                     s1.Position = 0
                     s2.Position = 0

                     Do While ((s1.Position <> s1.Length) _
                                 AndAlso (s1.ReadByte = s2.ReadByte))


                     Loop
                     If (s1.Position = s1.Length) Then
                        Return type
                     End If
                  End If

               Loop
            Finally
               If (Not (s1) Is Nothing) Then
                  s1.Close()
               End If
               If (Not (s2) Is Nothing) Then
                  s2.Close()
               End If
            End Try
         End If
         xs.Add(dsSchema)
         Return type
      End Function
   End Class

   '''<summary>
   '''Represents the strongly named DataTable class.
   '''</summary>
   <Global.System.Serializable(), _
    Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
   Partial Public Class FichasEmitidasDataTable
      Inherits Global.System.Data.TypedTableBase(Of FichasEmitidasRow)

      Private columnFechaOperacion As Global.System.Data.DataColumn

      Private columnTipoDocumento As Global.System.Data.DataColumn

      Private columnNroDocumento As Global.System.Data.DataColumn

      Private columnNroOperacion As Global.System.Data.DataColumn

      Private columnNombreCliente As Global.System.Data.DataColumn

      Private columnMontoTotalBruto As Global.System.Data.DataColumn

      Private columnAnticipo As Global.System.Data.DataColumn

      Private columnInteres As Global.System.Data.DataColumn

      Private columnTotalNeto As Global.System.Data.DataColumn

      Private columnUsuario As Global.System.Data.DataColumn

      Private columnIdEstado As Global.System.Data.DataColumn

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub New()
         MyBase.New()
         Me.TableName = "FichasEmitidas"
         Me.BeginInit()
         Me.InitClass()
         Me.EndInit()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal table As Global.System.Data.DataTable)
         MyBase.New()
         Me.TableName = table.TableName
         If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
            Me.CaseSensitive = table.CaseSensitive
         End If
         If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
            Me.Locale = table.Locale
         End If
         If (table.Namespace <> table.DataSet.Namespace) Then
            Me.Namespace = table.Namespace
         End If
         Me.Prefix = table.Prefix
         Me.MinimumCapacity = table.MinimumCapacity
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
         MyBase.New(info, context)
         Me.InitVars()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property FechaOperacionColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnFechaOperacion
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property TipoDocumentoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnTipoDocumento
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroDocumentoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroDocumento
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroOperacionColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroOperacion
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NombreClienteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreCliente
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property MontoTotalBrutoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnMontoTotalBruto
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property AnticipoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnAnticipo
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property InteresColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnInteres
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property TotalNetoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnTotalNeto
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property UsuarioColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnUsuario
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property IdEstadoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdEstado
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
       Global.System.ComponentModel.Browsable(False)> _
      Public ReadOnly Property Count() As Integer
         Get
            Return Me.Rows.Count
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Default Public ReadOnly Property Item(ByVal index As Integer) As FichasEmitidasRow
         Get
            Return CType(Me.Rows(index), FichasEmitidasRow)
         End Get
      End Property

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event FichasEmitidasRowChanging As FichasEmitidasRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event FichasEmitidasRowChanged As FichasEmitidasRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event FichasEmitidasRowDeleting As FichasEmitidasRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event FichasEmitidasRowDeleted As FichasEmitidasRowChangeEventHandler

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overloads Sub AddFichasEmitidasRow(ByVal row As FichasEmitidasRow)
         Me.Rows.Add(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overloads Function AddFichasEmitidasRow(ByVal FechaOperacion As Date, ByVal TipoDocumento As String, ByVal NroDocumento As String, ByVal NroOperacion As String, ByVal NombreCliente As String, ByVal MontoTotalBruto As Decimal, ByVal Anticipo As Decimal, ByVal Interes As Decimal, ByVal TotalNeto As Decimal, ByVal Usuario As String, ByVal IdEstado As String) As FichasEmitidasRow
         Dim rowFichasEmitidasRow As FichasEmitidasRow = CType(Me.NewRow, FichasEmitidasRow)
         Dim columnValuesArray() As Object = New Object() {FechaOperacion, TipoDocumento, NroDocumento, NroOperacion, NombreCliente, MontoTotalBruto, Anticipo, Interes, TotalNeto, Usuario, IdEstado}
         rowFichasEmitidasRow.ItemArray = columnValuesArray
         Me.Rows.Add(rowFichasEmitidasRow)
         Return rowFichasEmitidasRow
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overrides Function Clone() As Global.System.Data.DataTable
         Dim cln As FichasEmitidasDataTable = CType(MyBase.Clone, FichasEmitidasDataTable)
         cln.InitVars()
         Return cln
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
         Return New FichasEmitidasDataTable()
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub InitVars()
         Me.columnFechaOperacion = MyBase.Columns("FechaOperacion")
         Me.columnTipoDocumento = MyBase.Columns("TipoDocumento")
         Me.columnNroDocumento = MyBase.Columns("NroDocumento")
         Me.columnNroOperacion = MyBase.Columns("NroOperacion")
         Me.columnNombreCliente = MyBase.Columns("NombreCliente")
         Me.columnMontoTotalBruto = MyBase.Columns("MontoTotalBruto")
         Me.columnAnticipo = MyBase.Columns("Anticipo")
         Me.columnInteres = MyBase.Columns("Interes")
         Me.columnTotalNeto = MyBase.Columns("TotalNeto")
         Me.columnUsuario = MyBase.Columns("Usuario")
         Me.columnIdEstado = MyBase.Columns("IdEstado")
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Private Sub InitClass()
         Me.columnFechaOperacion = New Global.System.Data.DataColumn("FechaOperacion", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFechaOperacion)
         Me.columnTipoDocumento = New Global.System.Data.DataColumn("TipoDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnTipoDocumento)
         Me.columnNroDocumento = New Global.System.Data.DataColumn("NroDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroDocumento)
         Me.columnNroOperacion = New Global.System.Data.DataColumn("NroOperacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroOperacion)
         Me.columnNombreCliente = New Global.System.Data.DataColumn("NombreCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreCliente)
         Me.columnMontoTotalBruto = New Global.System.Data.DataColumn("MontoTotalBruto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnMontoTotalBruto)
         Me.columnAnticipo = New Global.System.Data.DataColumn("Anticipo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnAnticipo)
         Me.columnInteres = New Global.System.Data.DataColumn("Interes", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnInteres)
         Me.columnTotalNeto = New Global.System.Data.DataColumn("TotalNeto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnTotalNeto)
         Me.columnUsuario = New Global.System.Data.DataColumn("Usuario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnUsuario)
         Me.columnIdEstado = New Global.System.Data.DataColumn("IdEstado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdEstado)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function NewFichasEmitidasRow() As FichasEmitidasRow
         Return CType(Me.NewRow, FichasEmitidasRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
         Return New FichasEmitidasRow(builder)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function GetRowType() As Global.System.Type
         Return GetType(FichasEmitidasRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanged(e)
         If (Not (Me.FichasEmitidasRowChangedEvent) Is Nothing) Then
            RaiseEvent FichasEmitidasRowChanged(Me, New FichasEmitidasRowChangeEvent(CType(e.Row, FichasEmitidasRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanging(e)
         If (Not (Me.FichasEmitidasRowChangingEvent) Is Nothing) Then
            RaiseEvent FichasEmitidasRowChanging(Me, New FichasEmitidasRowChangeEvent(CType(e.Row, FichasEmitidasRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleted(e)
         If (Not (Me.FichasEmitidasRowDeletedEvent) Is Nothing) Then
            RaiseEvent FichasEmitidasRowDeleted(Me, New FichasEmitidasRowChangeEvent(CType(e.Row, FichasEmitidasRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleting(e)
         If (Not (Me.FichasEmitidasRowDeletingEvent) Is Nothing) Then
            RaiseEvent FichasEmitidasRowDeleting(Me, New FichasEmitidasRowChangeEvent(CType(e.Row, FichasEmitidasRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub RemoveFichasEmitidasRow(ByVal row As FichasEmitidasRow)
         Me.Rows.Remove(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
         Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
         Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
         Dim ds As FichasDataSet = New FichasDataSet()
         Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any1.Namespace = "http://www.w3.org/2001/XMLSchema"
         any1.MinOccurs = New Decimal(0)
         any1.MaxOccurs = Decimal.MaxValue
         any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any1)
         Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
         any2.MinOccurs = New Decimal(1)
         any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any2)
         Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute1.Name = "namespace"
         attribute1.FixedValue = ds.Namespace
         type.Attributes.Add(attribute1)
         Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute2.Name = "tableTypeName"
         attribute2.FixedValue = "FichasEmitidasDataTable"
         type.Attributes.Add(attribute2)
         type.Particle = sequence
         Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
         If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
               Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
               dsSchema.Write(s1)
               Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
               Do While schemas.MoveNext
                  schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                  s2.SetLength(0)
                  schema.Write(s2)
                  If (s1.Length = s2.Length) Then
                     s1.Position = 0
                     s2.Position = 0

                     Do While ((s1.Position <> s1.Length) _
                                 AndAlso (s1.ReadByte = s2.ReadByte))


                     Loop
                     If (s1.Position = s1.Length) Then
                        Return type
                     End If
                  End If

               Loop
            Finally
               If (Not (s1) Is Nothing) Then
                  s1.Close()
               End If
               If (Not (s2) Is Nothing) Then
                  s2.Close()
               End If
            End Try
         End If
         xs.Add(dsSchema)
         Return type
      End Function
   End Class

   '''<summary>
   '''Represents the strongly named DataTable class.
   '''</summary>
   <Global.System.Serializable(), _
    Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
   Partial Public Class IngresosPorFichasDataTable
      Inherits Global.System.Data.TypedTableBase(Of IngresosPorFichasRow)

      Private columnFecha As Global.System.Data.DataColumn

      Private columnNroOperacion As Global.System.Data.DataColumn

      Private columnTipoDocumento As Global.System.Data.DataColumn

      Private columnNroDocumento As Global.System.Data.DataColumn

      Private columnNombreCliente As Global.System.Data.DataColumn

      Private columnImporte As Global.System.Data.DataColumn

      Private columnTipo As Global.System.Data.DataColumn

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub New()
         MyBase.New()
         Me.TableName = "IngresosPorFichas"
         Me.BeginInit()
         Me.InitClass()
         Me.EndInit()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal table As Global.System.Data.DataTable)
         MyBase.New()
         Me.TableName = table.TableName
         If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
            Me.CaseSensitive = table.CaseSensitive
         End If
         If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
            Me.Locale = table.Locale
         End If
         If (table.Namespace <> table.DataSet.Namespace) Then
            Me.Namespace = table.Namespace
         End If
         Me.Prefix = table.Prefix
         Me.MinimumCapacity = table.MinimumCapacity
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
         MyBase.New(info, context)
         Me.InitVars()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnFecha
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroOperacionColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroOperacion
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property TipoDocumentoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnTipoDocumento
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NroDocumentoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroDocumento
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NombreClienteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreCliente
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property ImporteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnImporte
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property TipoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnTipo
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
       Global.System.ComponentModel.Browsable(False)> _
      Public ReadOnly Property Count() As Integer
         Get
            Return Me.Rows.Count
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Default Public ReadOnly Property Item(ByVal index As Integer) As IngresosPorFichasRow
         Get
            Return CType(Me.Rows(index), IngresosPorFichasRow)
         End Get
      End Property

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event IngresosPorFichasRowChanging As IngresosPorFichasRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event IngresosPorFichasRowChanged As IngresosPorFichasRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event IngresosPorFichasRowDeleting As IngresosPorFichasRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event IngresosPorFichasRowDeleted As IngresosPorFichasRowChangeEventHandler

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overloads Sub AddIngresosPorFichasRow(ByVal row As IngresosPorFichasRow)
         Me.Rows.Add(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overloads Function AddIngresosPorFichasRow(ByVal Fecha As Date, ByVal NroOperacion As Integer, ByVal TipoDocumento As String, ByVal NroDocumento As String, ByVal NombreCliente As String, ByVal Importe As Decimal, ByVal Tipo As String) As IngresosPorFichasRow
         Dim rowIngresosPorFichasRow As IngresosPorFichasRow = CType(Me.NewRow, IngresosPorFichasRow)
         Dim columnValuesArray() As Object = New Object() {Fecha, NroOperacion, TipoDocumento, NroDocumento, NombreCliente, Importe, Tipo}
         rowIngresosPorFichasRow.ItemArray = columnValuesArray
         Me.Rows.Add(rowIngresosPorFichasRow)
         Return rowIngresosPorFichasRow
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overrides Function Clone() As Global.System.Data.DataTable
         Dim cln As IngresosPorFichasDataTable = CType(MyBase.Clone, IngresosPorFichasDataTable)
         cln.InitVars()
         Return cln
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
         Return New IngresosPorFichasDataTable()
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub InitVars()
         Me.columnFecha = MyBase.Columns("Fecha")
         Me.columnNroOperacion = MyBase.Columns("NroOperacion")
         Me.columnTipoDocumento = MyBase.Columns("TipoDocumento")
         Me.columnNroDocumento = MyBase.Columns("NroDocumento")
         Me.columnNombreCliente = MyBase.Columns("NombreCliente")
         Me.columnImporte = MyBase.Columns("Importe")
         Me.columnTipo = MyBase.Columns("Tipo")
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Private Sub InitClass()
         Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFecha)
         Me.columnNroOperacion = New Global.System.Data.DataColumn("NroOperacion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroOperacion)
         Me.columnTipoDocumento = New Global.System.Data.DataColumn("TipoDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnTipoDocumento)
         Me.columnNroDocumento = New Global.System.Data.DataColumn("NroDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroDocumento)
         Me.columnNombreCliente = New Global.System.Data.DataColumn("NombreCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreCliente)
         Me.columnImporte = New Global.System.Data.DataColumn("Importe", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnImporte)
         Me.columnTipo = New Global.System.Data.DataColumn("Tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnTipo)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function NewIngresosPorFichasRow() As IngresosPorFichasRow
         Return CType(Me.NewRow, IngresosPorFichasRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
         Return New IngresosPorFichasRow(builder)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function GetRowType() As Global.System.Type
         Return GetType(IngresosPorFichasRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanged(e)
         If (Not (Me.IngresosPorFichasRowChangedEvent) Is Nothing) Then
            RaiseEvent IngresosPorFichasRowChanged(Me, New IngresosPorFichasRowChangeEvent(CType(e.Row, IngresosPorFichasRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanging(e)
         If (Not (Me.IngresosPorFichasRowChangingEvent) Is Nothing) Then
            RaiseEvent IngresosPorFichasRowChanging(Me, New IngresosPorFichasRowChangeEvent(CType(e.Row, IngresosPorFichasRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleted(e)
         If (Not (Me.IngresosPorFichasRowDeletedEvent) Is Nothing) Then
            RaiseEvent IngresosPorFichasRowDeleted(Me, New IngresosPorFichasRowChangeEvent(CType(e.Row, IngresosPorFichasRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleting(e)
         If (Not (Me.IngresosPorFichasRowDeletingEvent) Is Nothing) Then
            RaiseEvent IngresosPorFichasRowDeleting(Me, New IngresosPorFichasRowChangeEvent(CType(e.Row, IngresosPorFichasRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub RemoveIngresosPorFichasRow(ByVal row As IngresosPorFichasRow)
         Me.Rows.Remove(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
         Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
         Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
         Dim ds As FichasDataSet = New FichasDataSet()
         Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any1.Namespace = "http://www.w3.org/2001/XMLSchema"
         any1.MinOccurs = New Decimal(0)
         any1.MaxOccurs = Decimal.MaxValue
         any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any1)
         Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
         any2.MinOccurs = New Decimal(1)
         any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any2)
         Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute1.Name = "namespace"
         attribute1.FixedValue = ds.Namespace
         type.Attributes.Add(attribute1)
         Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute2.Name = "tableTypeName"
         attribute2.FixedValue = "IngresosPorFichasDataTable"
         type.Attributes.Add(attribute2)
         type.Particle = sequence
         Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
         If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
               Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
               dsSchema.Write(s1)
               Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
               Do While schemas.MoveNext
                  schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                  s2.SetLength(0)
                  schema.Write(s2)
                  If (s1.Length = s2.Length) Then
                     s1.Position = 0
                     s2.Position = 0

                     Do While ((s1.Position <> s1.Length) _
                                 AndAlso (s1.ReadByte = s2.ReadByte))


                     Loop
                     If (s1.Position = s1.Length) Then
                        Return type
                     End If
                  End If

               Loop
            Finally
               If (Not (s1) Is Nothing) Then
                  s1.Close()
               End If
               If (Not (s2) Is Nothing) Then
                  s2.Close()
               End If
            End Try
         End If
         xs.Add(dsSchema)
         Return type
      End Function
   End Class

   '''<summary>
   '''Represents the strongly named DataTable class.
   '''</summary>
   <Global.System.Serializable(), _
    Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
   Partial Public Class ResumenPorCategoriaFiscalDataTable
      Inherits Global.System.Data.TypedTableBase(Of ResumenPorCategoriaFiscalRow)

      Private columnNombreCategoriaFiscal As Global.System.Data.DataColumn

      Private columnTotalIvaInscripto As Global.System.Data.DataColumn

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub New()
         MyBase.New()
         Me.TableName = "ResumenPorCategoriaFiscal"
         Me.BeginInit()
         Me.InitClass()
         Me.EndInit()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal table As Global.System.Data.DataTable)
         MyBase.New()
         Me.TableName = table.TableName
         If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
            Me.CaseSensitive = table.CaseSensitive
         End If
         If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
            Me.Locale = table.Locale
         End If
         If (table.Namespace <> table.DataSet.Namespace) Then
            Me.Namespace = table.Namespace
         End If
         Me.Prefix = table.Prefix
         Me.MinimumCapacity = table.MinimumCapacity
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
         MyBase.New(info, context)
         Me.InitVars()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property NombreCategoriaFiscalColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreCategoriaFiscal
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property TotalIvaInscriptoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnTotalIvaInscripto
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
       Global.System.ComponentModel.Browsable(False)> _
      Public ReadOnly Property Count() As Integer
         Get
            Return Me.Rows.Count
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Default Public ReadOnly Property Item(ByVal index As Integer) As ResumenPorCategoriaFiscalRow
         Get
            Return CType(Me.Rows(index), ResumenPorCategoriaFiscalRow)
         End Get
      End Property

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event ResumenPorCategoriaFiscalRowChanging As ResumenPorCategoriaFiscalRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event ResumenPorCategoriaFiscalRowChanged As ResumenPorCategoriaFiscalRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event ResumenPorCategoriaFiscalRowDeleting As ResumenPorCategoriaFiscalRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Event ResumenPorCategoriaFiscalRowDeleted As ResumenPorCategoriaFiscalRowChangeEventHandler

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overloads Sub AddResumenPorCategoriaFiscalRow(ByVal row As ResumenPorCategoriaFiscalRow)
         Me.Rows.Add(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overloads Function AddResumenPorCategoriaFiscalRow(ByVal NombreCategoriaFiscal As String, ByVal TotalIvaInscripto As Decimal) As ResumenPorCategoriaFiscalRow
         Dim rowResumenPorCategoriaFiscalRow As ResumenPorCategoriaFiscalRow = CType(Me.NewRow, ResumenPorCategoriaFiscalRow)
         Dim columnValuesArray() As Object = New Object() {NombreCategoriaFiscal, TotalIvaInscripto}
         rowResumenPorCategoriaFiscalRow.ItemArray = columnValuesArray
         Me.Rows.Add(rowResumenPorCategoriaFiscalRow)
         Return rowResumenPorCategoriaFiscalRow
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Overrides Function Clone() As Global.System.Data.DataTable
         Dim cln As ResumenPorCategoriaFiscalDataTable = CType(MyBase.Clone, ResumenPorCategoriaFiscalDataTable)
         cln.InitVars()
         Return cln
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
         Return New ResumenPorCategoriaFiscalDataTable()
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub InitVars()
         Me.columnNombreCategoriaFiscal = MyBase.Columns("NombreCategoriaFiscal")
         Me.columnTotalIvaInscripto = MyBase.Columns("TotalIvaInscripto")
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Private Sub InitClass()
         Me.columnNombreCategoriaFiscal = New Global.System.Data.DataColumn("NombreCategoriaFiscal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreCategoriaFiscal)
         Me.columnTotalIvaInscripto = New Global.System.Data.DataColumn("TotalIvaInscripto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnTotalIvaInscripto)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function NewResumenPorCategoriaFiscalRow() As ResumenPorCategoriaFiscalRow
         Return CType(Me.NewRow, ResumenPorCategoriaFiscalRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
         Return New ResumenPorCategoriaFiscalRow(builder)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Function GetRowType() As Global.System.Type
         Return GetType(ResumenPorCategoriaFiscalRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanged(e)
         If (Not (Me.ResumenPorCategoriaFiscalRowChangedEvent) Is Nothing) Then
            RaiseEvent ResumenPorCategoriaFiscalRowChanged(Me, New ResumenPorCategoriaFiscalRowChangeEvent(CType(e.Row, ResumenPorCategoriaFiscalRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanging(e)
         If (Not (Me.ResumenPorCategoriaFiscalRowChangingEvent) Is Nothing) Then
            RaiseEvent ResumenPorCategoriaFiscalRowChanging(Me, New ResumenPorCategoriaFiscalRowChangeEvent(CType(e.Row, ResumenPorCategoriaFiscalRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleted(e)
         If (Not (Me.ResumenPorCategoriaFiscalRowDeletedEvent) Is Nothing) Then
            RaiseEvent ResumenPorCategoriaFiscalRowDeleted(Me, New ResumenPorCategoriaFiscalRowChangeEvent(CType(e.Row, ResumenPorCategoriaFiscalRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleting(e)
         If (Not (Me.ResumenPorCategoriaFiscalRowDeletingEvent) Is Nothing) Then
            RaiseEvent ResumenPorCategoriaFiscalRowDeleting(Me, New ResumenPorCategoriaFiscalRowChangeEvent(CType(e.Row, ResumenPorCategoriaFiscalRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub RemoveResumenPorCategoriaFiscalRow(ByVal row As ResumenPorCategoriaFiscalRow)
         Me.Rows.Remove(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
         Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
         Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
         Dim ds As FichasDataSet = New FichasDataSet()
         Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any1.Namespace = "http://www.w3.org/2001/XMLSchema"
         any1.MinOccurs = New Decimal(0)
         any1.MaxOccurs = Decimal.MaxValue
         any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any1)
         Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
         any2.MinOccurs = New Decimal(1)
         any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any2)
         Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute1.Name = "namespace"
         attribute1.FixedValue = ds.Namespace
         type.Attributes.Add(attribute1)
         Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute2.Name = "tableTypeName"
         attribute2.FixedValue = "ResumenPorCategoriaFiscalDataTable"
         type.Attributes.Add(attribute2)
         type.Particle = sequence
         Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
         If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
               Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
               dsSchema.Write(s1)
               Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
               Do While schemas.MoveNext
                  schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                  s2.SetLength(0)
                  schema.Write(s2)
                  If (s1.Length = s2.Length) Then
                     s1.Position = 0
                     s2.Position = 0

                     Do While ((s1.Position <> s1.Length) _
                                 AndAlso (s1.ReadByte = s2.ReadByte))


                     Loop
                     If (s1.Position = s1.Length) Then
                        Return type
                     End If
                  End If

               Loop
            Finally
               If (Not (s1) Is Nothing) Then
                  s1.Close()
               End If
               If (Not (s2) Is Nothing) Then
                  s2.Close()
               End If
            End Try
         End If
         xs.Add(dsSchema)
         Return type
      End Function
   End Class

   '''<summary>
   '''Represents strongly named DataRow class.
   '''</summary>
   Partial Public Class FichasProductosRow
      Inherits Global.System.Data.DataRow

      Private tableFichasProductos As FichasProductosDataTable

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
         MyBase.New(rb)
         Me.tableFichasProductos = CType(Me.Table, FichasProductosDataTable)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property ProductoDesc() As String
         Get
            Try
               Return CType(Me(Me.tableFichasProductos.ProductoDescColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'ProductoDesc' in table 'FichasProductos' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableFichasProductos.ProductoDescColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Cantidad() As Integer
         Get
            Try
               Return CType(Me(Me.tableFichasProductos.CantidadColumn), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Cantidad' in table 'FichasProductos' is DBNull.", e)
            End Try
         End Get
         Set(value As Integer)
            Me(Me.tableFichasProductos.CantidadColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Precio() As Double
         Get
            Try
               Return CType(Me(Me.tableFichasProductos.PrecioColumn), Double)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Precio' in table 'FichasProductos' is DBNull.", e)
            End Try
         End Get
         Set(value As Double)
            Me(Me.tableFichasProductos.PrecioColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
 Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Marca() As String
         Get
            Try
               Return CType(Me(Me.tableFichasProductos.MarcaColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'MarcaDesc' in table 'FichasProductos' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableFichasProductos.MarcaColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsProductoDescNull() As Boolean
         Return Me.IsNull(Me.tableFichasProductos.ProductoDescColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetProductoDescNull()
         Me(Me.tableFichasProductos.ProductoDescColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsCantidadNull() As Boolean
         Return Me.IsNull(Me.tableFichasProductos.CantidadColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetCantidadNull()
         Me(Me.tableFichasProductos.CantidadColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsPrecioNull() As Boolean
         Return Me.IsNull(Me.tableFichasProductos.PrecioColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetPrecioNull()
         Me(Me.tableFichasProductos.PrecioColumn) = Global.System.Convert.DBNull
      End Sub
   End Class

   '''<summary>
   '''Represents strongly named DataRow class.
   '''</summary>
   Partial Public Class PagosPendientesRow
      Inherits Global.System.Data.DataRow

      Private tablePagosPendientes As PagosPendientesDataTable

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
         MyBase.New(rb)
         Me.tablePagosPendientes = CType(Me.Table, PagosPendientesDataTable)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroOperacion() As Integer
         Get
            Try
               Return CType(Me(Me.tablePagosPendientes.NroOperacionColumn), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NroOperacion' in table 'PagosPendientes' is DBNull.", e)
            End Try
         End Get
         Set(value As Integer)
            Me(Me.tablePagosPendientes.NroOperacionColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property TipoDocumento() As String
         Get
            Try
               Return CType(Me(Me.tablePagosPendientes.TipoDocumentoColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'TipoDocumento' in table 'PagosPendientes' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tablePagosPendientes.TipoDocumentoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroDocumento() As String
         Get
            Try
               Return CType(Me(Me.tablePagosPendientes.NroDocumentoColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NroDocumento' in table 'PagosPendientes' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tablePagosPendientes.NroDocumentoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroCuota() As Integer
         Get
            Try
               Return CType(Me(Me.tablePagosPendientes.NroCuotaColumn), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NroCuota' in table 'PagosPendientes' is DBNull.", e)
            End Try
         End Get
         Set(value As Integer)
            Me(Me.tablePagosPendientes.NroCuotaColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property FechaVencimiento() As Date
         Get
            Try
               Return CType(Me(Me.tablePagosPendientes.FechaVencimientoColumn), Date)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'FechaVencimiento' in table 'PagosPendientes' is DBNull.", e)
            End Try
         End Get
         Set(value As Date)
            Me(Me.tablePagosPendientes.FechaVencimientoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Importe() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePagosPendientes.ImporteColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Importe' in table 'PagosPendientes' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tablePagosPendientes.ImporteColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Saldo() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePagosPendientes.SaldoColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Saldo' in table 'PagosPendientes' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tablePagosPendientes.SaldoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NombreCliente() As String
         Get
            Try
               Return CType(Me(Me.tablePagosPendientes.NombreClienteColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NombreCliente' in table 'PagosPendientes' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tablePagosPendientes.NombreClienteColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Direccion() As String
         Get
            Try
               Return CType(Me(Me.tablePagosPendientes.DireccionColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Direccion' in table 'PagosPendientes' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tablePagosPendientes.DireccionColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Telefono() As String
         Get
            Try
               Return CType(Me(Me.tablePagosPendientes.TelefonoColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Telefono' in table 'PagosPendientes' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tablePagosPendientes.TelefonoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Celular() As String
         Get
            Try
               Return CType(Me(Me.tablePagosPendientes.CelularColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Celular' in table 'PagosPendientes' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tablePagosPendientes.CelularColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Producto() As String
         Get
            Try
               Return CType(Me(Me.tablePagosPendientes.ProductoColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Producto' in table 'PagosPendientes' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tablePagosPendientes.ProductoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNroOperacionNull() As Boolean
         Return Me.IsNull(Me.tablePagosPendientes.NroOperacionColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNroOperacionNull()
         Me(Me.tablePagosPendientes.NroOperacionColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsTipoDocumentoNull() As Boolean
         Return Me.IsNull(Me.tablePagosPendientes.TipoDocumentoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetTipoDocumentoNull()
         Me(Me.tablePagosPendientes.TipoDocumentoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNroDocumentoNull() As Boolean
         Return Me.IsNull(Me.tablePagosPendientes.NroDocumentoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNroDocumentoNull()
         Me(Me.tablePagosPendientes.NroDocumentoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNroCuotaNull() As Boolean
         Return Me.IsNull(Me.tablePagosPendientes.NroCuotaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNroCuotaNull()
         Me(Me.tablePagosPendientes.NroCuotaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsFechaVencimientoNull() As Boolean
         Return Me.IsNull(Me.tablePagosPendientes.FechaVencimientoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetFechaVencimientoNull()
         Me(Me.tablePagosPendientes.FechaVencimientoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsImporteNull() As Boolean
         Return Me.IsNull(Me.tablePagosPendientes.ImporteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetImporteNull()
         Me(Me.tablePagosPendientes.ImporteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsSaldoNull() As Boolean
         Return Me.IsNull(Me.tablePagosPendientes.SaldoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetSaldoNull()
         Me(Me.tablePagosPendientes.SaldoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNombreClienteNull() As Boolean
         Return Me.IsNull(Me.tablePagosPendientes.NombreClienteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNombreClienteNull()
         Me(Me.tablePagosPendientes.NombreClienteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsDireccionNull() As Boolean
         Return Me.IsNull(Me.tablePagosPendientes.DireccionColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetDireccionNull()
         Me(Me.tablePagosPendientes.DireccionColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsTelefonoNull() As Boolean
         Return Me.IsNull(Me.tablePagosPendientes.TelefonoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetTelefonoNull()
         Me(Me.tablePagosPendientes.TelefonoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsCelularNull() As Boolean
         Return Me.IsNull(Me.tablePagosPendientes.CelularColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetCelularNull()
         Me(Me.tablePagosPendientes.CelularColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsProductoNull() As Boolean
         Return Me.IsNull(Me.tablePagosPendientes.ProductoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetProductoNull()
         Me(Me.tablePagosPendientes.ProductoColumn) = Global.System.Convert.DBNull
      End Sub
   End Class

   '''<summary>
   '''Represents strongly named DataRow class.
   '''</summary>
   Partial Public Class FichasPagosRow
      Inherits Global.System.Data.DataRow

      Private tableFichasPagos As FichasPagosDataTable

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
         MyBase.New(rb)
         Me.tableFichasPagos = CType(Me.Table, FichasPagosDataTable)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroOperacion() As Integer
         Get
            Return CType(Me(Me.tableFichasPagos.NroOperacionColumn), Integer)
         End Get
         Set(value As Integer)
            Me(Me.tableFichasPagos.NroOperacionColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property IdCliente() As Int64
         Get
            Return CType(Me(Me.tableFichasPagos.IdClienteColumn), Int64)
         End Get
         Set(value As Int64)
            Me(Me.tableFichasPagos.IdClienteColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property TipoDocumento() As String
         Get
            Return CType(Me(Me.tableFichasPagos.TipoDocumentoColumn), String)
         End Get
         Set(value As String)
            Me(Me.tableFichasPagos.TipoDocumentoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroDocumento() As String
         Get
            Return CType(Me(Me.tableFichasPagos.NroDocumentoColumn), String)
         End Get
         Set(value As String)
            Me(Me.tableFichasPagos.NroDocumentoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroCuota() As Integer
         Get
            Return CType(Me(Me.tableFichasPagos.NroCuotaColumn), Integer)
         End Get
         Set(value As Integer)
            Me(Me.tableFichasPagos.NroCuotaColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property FechaVencimiento() As Date
         Get
            Return CType(Me(Me.tableFichasPagos.FechaVencimientoColumn), Date)
         End Get
         Set(value As Date)
            Me(Me.tableFichasPagos.FechaVencimientoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Importe() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.ImporteColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Importe' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasPagos.ImporteColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Saldo() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.SaldoColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Saldo' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasPagos.SaldoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroCuota1() As Integer
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.NroCuota1Column), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NroCuota1' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Integer)
            Me(Me.tableFichasPagos.NroCuota1Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property FechaVencimiento1() As Date
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.FechaVencimiento1Column), Date)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'FechaVencimiento1' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Date)
            Me(Me.tableFichasPagos.FechaVencimiento1Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Importe1() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.Importe1Column), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Importe1' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasPagos.Importe1Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Saldo1() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.Saldo1Column), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Saldo1' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasPagos.Saldo1Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroCuota2() As Integer
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.NroCuota2Column), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NroCuota2' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Integer)
            Me(Me.tableFichasPagos.NroCuota2Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property FechaVencimiento2() As Date
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.FechaVencimiento2Column), Date)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'FechaVencimiento2' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Date)
            Me(Me.tableFichasPagos.FechaVencimiento2Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Importe2() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.Importe2Column), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Importe2' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasPagos.Importe2Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Saldo2() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.Saldo2Column), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Saldo2' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasPagos.Saldo2Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroCuota3() As Integer
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.NroCuota3Column), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NroCuota3' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Integer)
            Me(Me.tableFichasPagos.NroCuota3Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property FechaVencimiento3() As Date
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.FechaVencimiento3Column), Date)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'FechaVencimiento3' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Date)
            Me(Me.tableFichasPagos.FechaVencimiento3Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Importe3() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.Importe3Column), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Importe3' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasPagos.Importe3Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Saldo3() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.Saldo3Column), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Saldo3' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasPagos.Saldo3Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroCuota4() As Integer
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.NroCuota4Column), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NroCuota4' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Integer)
            Me(Me.tableFichasPagos.NroCuota4Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property FechaVencimiento4() As Date
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.FechaVencimiento4Column), Date)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'FechaVencimiento4' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Date)
            Me(Me.tableFichasPagos.FechaVencimiento4Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Importe4() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.Importe4Column), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Importe4' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasPagos.Importe4Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Saldo4() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasPagos.Saldo4Column), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Saldo4' in table 'FichasPagos' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasPagos.Saldo4Column) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsImporteNull() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.ImporteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetImporteNull()
         Me(Me.tableFichasPagos.ImporteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsSaldoNull() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.SaldoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetSaldoNull()
         Me(Me.tableFichasPagos.SaldoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNroCuota1Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.NroCuota1Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNroCuota1Null()
         Me(Me.tableFichasPagos.NroCuota1Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsFechaVencimiento1Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.FechaVencimiento1Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetFechaVencimiento1Null()
         Me(Me.tableFichasPagos.FechaVencimiento1Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsImporte1Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.Importe1Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetImporte1Null()
         Me(Me.tableFichasPagos.Importe1Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsSaldo1Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.Saldo1Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetSaldo1Null()
         Me(Me.tableFichasPagos.Saldo1Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNroCuota2Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.NroCuota2Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNroCuota2Null()
         Me(Me.tableFichasPagos.NroCuota2Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsFechaVencimiento2Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.FechaVencimiento2Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetFechaVencimiento2Null()
         Me(Me.tableFichasPagos.FechaVencimiento2Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsImporte2Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.Importe2Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetImporte2Null()
         Me(Me.tableFichasPagos.Importe2Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsSaldo2Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.Saldo2Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetSaldo2Null()
         Me(Me.tableFichasPagos.Saldo2Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNroCuota3Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.NroCuota3Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNroCuota3Null()
         Me(Me.tableFichasPagos.NroCuota3Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsFechaVencimiento3Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.FechaVencimiento3Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetFechaVencimiento3Null()
         Me(Me.tableFichasPagos.FechaVencimiento3Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsImporte3Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.Importe3Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetImporte3Null()
         Me(Me.tableFichasPagos.Importe3Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsSaldo3Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.Saldo3Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetSaldo3Null()
         Me(Me.tableFichasPagos.Saldo3Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNroCuota4Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.NroCuota4Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNroCuota4Null()
         Me(Me.tableFichasPagos.NroCuota4Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsFechaVencimiento4Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.FechaVencimiento4Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetFechaVencimiento4Null()
         Me(Me.tableFichasPagos.FechaVencimiento4Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsImporte4Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.Importe4Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetImporte4Null()
         Me(Me.tableFichasPagos.Importe4Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsSaldo4Null() As Boolean
         Return Me.IsNull(Me.tableFichasPagos.Saldo4Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetSaldo4Null()
         Me(Me.tableFichasPagos.Saldo4Column) = Global.System.Convert.DBNull
      End Sub
   End Class

   '''<summary>
   '''Represents strongly named DataRow class.
   '''</summary>
   Partial Public Class FichasEmitidasRow
      Inherits Global.System.Data.DataRow

      Private tableFichasEmitidas As FichasEmitidasDataTable

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
         MyBase.New(rb)
         Me.tableFichasEmitidas = CType(Me.Table, FichasEmitidasDataTable)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property FechaOperacion() As Date
         Get
            Try
               Return CType(Me(Me.tableFichasEmitidas.FechaOperacionColumn), Date)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'FechaOperacion' in table 'FichasEmitidas' is DBNull.", e)
            End Try
         End Get
         Set(value As Date)
            Me(Me.tableFichasEmitidas.FechaOperacionColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property TipoDocumento() As String
         Get
            Try
               Return CType(Me(Me.tableFichasEmitidas.TipoDocumentoColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'TipoDocumento' in table 'FichasEmitidas' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableFichasEmitidas.TipoDocumentoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroDocumento() As String
         Get
            Try
               Return CType(Me(Me.tableFichasEmitidas.NroDocumentoColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NroDocumento' in table 'FichasEmitidas' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableFichasEmitidas.NroDocumentoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroOperacion() As String
         Get
            Try
               Return CType(Me(Me.tableFichasEmitidas.NroOperacionColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NroOperacion' in table 'FichasEmitidas' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableFichasEmitidas.NroOperacionColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NombreCliente() As String
         Get
            Try
               Return CType(Me(Me.tableFichasEmitidas.NombreClienteColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NombreCliente' in table 'FichasEmitidas' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableFichasEmitidas.NombreClienteColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property MontoTotalBruto() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasEmitidas.MontoTotalBrutoColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'MontoTotalBruto' in table 'FichasEmitidas' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasEmitidas.MontoTotalBrutoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Anticipo() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasEmitidas.AnticipoColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Anticipo' in table 'FichasEmitidas' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasEmitidas.AnticipoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Interes() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasEmitidas.InteresColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Interes' in table 'FichasEmitidas' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasEmitidas.InteresColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property TotalNeto() As Decimal
         Get
            Try
               Return CType(Me(Me.tableFichasEmitidas.TotalNetoColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'TotalNeto' in table 'FichasEmitidas' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableFichasEmitidas.TotalNetoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Usuario() As String
         Get
            Try
               Return CType(Me(Me.tableFichasEmitidas.UsuarioColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Usuario' in table 'FichasEmitidas' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableFichasEmitidas.UsuarioColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property IdEstado() As String
         Get
            Try
               Return CType(Me(Me.tableFichasEmitidas.IdEstadoColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'IdEstado' in table 'FichasEmitidas' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableFichasEmitidas.IdEstadoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsFechaOperacionNull() As Boolean
         Return Me.IsNull(Me.tableFichasEmitidas.FechaOperacionColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetFechaOperacionNull()
         Me(Me.tableFichasEmitidas.FechaOperacionColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsTipoDocumentoNull() As Boolean
         Return Me.IsNull(Me.tableFichasEmitidas.TipoDocumentoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetTipoDocumentoNull()
         Me(Me.tableFichasEmitidas.TipoDocumentoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNroDocumentoNull() As Boolean
         Return Me.IsNull(Me.tableFichasEmitidas.NroDocumentoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNroDocumentoNull()
         Me(Me.tableFichasEmitidas.NroDocumentoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNroOperacionNull() As Boolean
         Return Me.IsNull(Me.tableFichasEmitidas.NroOperacionColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNroOperacionNull()
         Me(Me.tableFichasEmitidas.NroOperacionColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNombreClienteNull() As Boolean
         Return Me.IsNull(Me.tableFichasEmitidas.NombreClienteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNombreClienteNull()
         Me(Me.tableFichasEmitidas.NombreClienteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsMontoTotalBrutoNull() As Boolean
         Return Me.IsNull(Me.tableFichasEmitidas.MontoTotalBrutoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetMontoTotalBrutoNull()
         Me(Me.tableFichasEmitidas.MontoTotalBrutoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsAnticipoNull() As Boolean
         Return Me.IsNull(Me.tableFichasEmitidas.AnticipoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetAnticipoNull()
         Me(Me.tableFichasEmitidas.AnticipoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsInteresNull() As Boolean
         Return Me.IsNull(Me.tableFichasEmitidas.InteresColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetInteresNull()
         Me(Me.tableFichasEmitidas.InteresColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsTotalNetoNull() As Boolean
         Return Me.IsNull(Me.tableFichasEmitidas.TotalNetoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetTotalNetoNull()
         Me(Me.tableFichasEmitidas.TotalNetoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsUsuarioNull() As Boolean
         Return Me.IsNull(Me.tableFichasEmitidas.UsuarioColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetUsuarioNull()
         Me(Me.tableFichasEmitidas.UsuarioColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsIdEstadoNull() As Boolean
         Return Me.IsNull(Me.tableFichasEmitidas.IdEstadoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetIdEstadoNull()
         Me(Me.tableFichasEmitidas.IdEstadoColumn) = Global.System.Convert.DBNull
      End Sub
   End Class

   '''<summary>
   '''Represents strongly named DataRow class.
   '''</summary>
   Partial Public Class IngresosPorFichasRow
      Inherits Global.System.Data.DataRow

      Private tableIngresosPorFichas As IngresosPorFichasDataTable

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
         MyBase.New(rb)
         Me.tableIngresosPorFichas = CType(Me.Table, IngresosPorFichasDataTable)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Fecha() As Date
         Get
            Try
               Return CType(Me(Me.tableIngresosPorFichas.FechaColumn), Date)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Fecha' in table 'IngresosPorFichas' is DBNull.", e)
            End Try
         End Get
         Set(value As Date)
            Me(Me.tableIngresosPorFichas.FechaColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroOperacion() As Integer
         Get
            Try
               Return CType(Me(Me.tableIngresosPorFichas.NroOperacionColumn), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NroOperacion' in table 'IngresosPorFichas' is DBNull.", e)
            End Try
         End Get
         Set(value As Integer)
            Me(Me.tableIngresosPorFichas.NroOperacionColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property TipoDocumento() As String
         Get
            Try
               Return CType(Me(Me.tableIngresosPorFichas.TipoDocumentoColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'TipoDocumento' in table 'IngresosPorFichas' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableIngresosPorFichas.TipoDocumentoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NroDocumento() As String
         Get
            Try
               Return CType(Me(Me.tableIngresosPorFichas.NroDocumentoColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NroDocumento' in table 'IngresosPorFichas' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableIngresosPorFichas.NroDocumentoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NombreCliente() As String
         Get
            Try
               Return CType(Me(Me.tableIngresosPorFichas.NombreClienteColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NombreCliente' in table 'IngresosPorFichas' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableIngresosPorFichas.NombreClienteColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Importe() As Decimal
         Get
            Try
               Return CType(Me(Me.tableIngresosPorFichas.ImporteColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Importe' in table 'IngresosPorFichas' is DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableIngresosPorFichas.ImporteColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property Tipo() As String
         Get
            Try
               Return CType(Me(Me.tableIngresosPorFichas.TipoColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'Tipo' in table 'IngresosPorFichas' is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableIngresosPorFichas.TipoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsFechaNull() As Boolean
         Return Me.IsNull(Me.tableIngresosPorFichas.FechaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetFechaNull()
         Me(Me.tableIngresosPorFichas.FechaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNroOperacionNull() As Boolean
         Return Me.IsNull(Me.tableIngresosPorFichas.NroOperacionColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNroOperacionNull()
         Me(Me.tableIngresosPorFichas.NroOperacionColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsTipoDocumentoNull() As Boolean
         Return Me.IsNull(Me.tableIngresosPorFichas.TipoDocumentoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetTipoDocumentoNull()
         Me(Me.tableIngresosPorFichas.TipoDocumentoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNroDocumentoNull() As Boolean
         Return Me.IsNull(Me.tableIngresosPorFichas.NroDocumentoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNroDocumentoNull()
         Me(Me.tableIngresosPorFichas.NroDocumentoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNombreClienteNull() As Boolean
         Return Me.IsNull(Me.tableIngresosPorFichas.NombreClienteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNombreClienteNull()
         Me(Me.tableIngresosPorFichas.NombreClienteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsImporteNull() As Boolean
         Return Me.IsNull(Me.tableIngresosPorFichas.ImporteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetImporteNull()
         Me(Me.tableIngresosPorFichas.ImporteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsTipoNull() As Boolean
         Return Me.IsNull(Me.tableIngresosPorFichas.TipoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetTipoNull()
         Me(Me.tableIngresosPorFichas.TipoColumn) = Global.System.Convert.DBNull
      End Sub
   End Class

   '''<summary>
   '''Represents strongly named DataRow class.
   '''</summary>
   Partial Public Class ResumenPorCategoriaFiscalRow
      Inherits Global.System.Data.DataRow

      Private tableResumenPorCategoriaFiscal As ResumenPorCategoriaFiscalDataTable

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
         MyBase.New(rb)
         Me.tableResumenPorCategoriaFiscal = CType(Me.Table, ResumenPorCategoriaFiscalDataTable)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property NombreCategoriaFiscal() As String
         Get
            Try
               Return CType(Me(Me.tableResumenPorCategoriaFiscal.NombreCategoriaFiscalColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'NombreCategoriaFiscal' in table 'ResumenPorCategoriaFiscal'" & _
                       " is DBNull.", e)
            End Try
         End Get
         Set(value As String)
            Me(Me.tableResumenPorCategoriaFiscal.NombreCategoriaFiscalColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Property TotalIvaInscripto() As Decimal
         Get
            Try
               Return CType(Me(Me.tableResumenPorCategoriaFiscal.TotalIvaInscriptoColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("The value for column 'TotalIvaInscripto' in table 'ResumenPorCategoriaFiscal' is " & _
                       "DBNull.", e)
            End Try
         End Get
         Set(value As Decimal)
            Me(Me.tableResumenPorCategoriaFiscal.TotalIvaInscriptoColumn) = value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsNombreCategoriaFiscalNull() As Boolean
         Return Me.IsNull(Me.tableResumenPorCategoriaFiscal.NombreCategoriaFiscalColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetNombreCategoriaFiscalNull()
         Me(Me.tableResumenPorCategoriaFiscal.NombreCategoriaFiscalColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Function IsTotalIvaInscriptoNull() As Boolean
         Return Me.IsNull(Me.tableResumenPorCategoriaFiscal.TotalIvaInscriptoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub SetTotalIvaInscriptoNull()
         Me(Me.tableResumenPorCategoriaFiscal.TotalIvaInscriptoColumn) = Global.System.Convert.DBNull
      End Sub
   End Class

   '''<summary>
   '''Row event argument class
   '''</summary>
   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Class FichasProductosRowChangeEvent
      Inherits Global.System.EventArgs

      Private eventRow As FichasProductosRow

      Private eventAction As Global.System.Data.DataRowAction

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub New(ByVal row As FichasProductosRow, ByVal action As Global.System.Data.DataRowAction)
         MyBase.New()
         Me.eventRow = row
         Me.eventAction = action
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Row() As FichasProductosRow
         Get
            Return Me.eventRow
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Action() As Global.System.Data.DataRowAction
         Get
            Return Me.eventAction
         End Get
      End Property
   End Class

   '''<summary>
   '''Row event argument class
   '''</summary>
   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Class PagosPendientesRowChangeEvent
      Inherits Global.System.EventArgs

      Private eventRow As PagosPendientesRow

      Private eventAction As Global.System.Data.DataRowAction

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub New(ByVal row As PagosPendientesRow, ByVal action As Global.System.Data.DataRowAction)
         MyBase.New()
         Me.eventRow = row
         Me.eventAction = action
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Row() As PagosPendientesRow
         Get
            Return Me.eventRow
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Action() As Global.System.Data.DataRowAction
         Get
            Return Me.eventAction
         End Get
      End Property
   End Class

   '''<summary>
   '''Row event argument class
   '''</summary>
   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Class FichasPagosRowChangeEvent
      Inherits Global.System.EventArgs

      Private eventRow As FichasPagosRow

      Private eventAction As Global.System.Data.DataRowAction

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub New(ByVal row As FichasPagosRow, ByVal action As Global.System.Data.DataRowAction)
         MyBase.New()
         Me.eventRow = row
         Me.eventAction = action
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Row() As FichasPagosRow
         Get
            Return Me.eventRow
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Action() As Global.System.Data.DataRowAction
         Get
            Return Me.eventAction
         End Get
      End Property
   End Class

   '''<summary>
   '''Row event argument class
   '''</summary>
   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Class FichasEmitidasRowChangeEvent
      Inherits Global.System.EventArgs

      Private eventRow As FichasEmitidasRow

      Private eventAction As Global.System.Data.DataRowAction

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub New(ByVal row As FichasEmitidasRow, ByVal action As Global.System.Data.DataRowAction)
         MyBase.New()
         Me.eventRow = row
         Me.eventAction = action
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Row() As FichasEmitidasRow
         Get
            Return Me.eventRow
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Action() As Global.System.Data.DataRowAction
         Get
            Return Me.eventAction
         End Get
      End Property
   End Class

   '''<summary>
   '''Row event argument class
   '''</summary>
   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Class IngresosPorFichasRowChangeEvent
      Inherits Global.System.EventArgs

      Private eventRow As IngresosPorFichasRow

      Private eventAction As Global.System.Data.DataRowAction

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub New(ByVal row As IngresosPorFichasRow, ByVal action As Global.System.Data.DataRowAction)
         MyBase.New()
         Me.eventRow = row
         Me.eventAction = action
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Row() As IngresosPorFichasRow
         Get
            Return Me.eventRow
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Action() As Global.System.Data.DataRowAction
         Get
            Return Me.eventAction
         End Get
      End Property
   End Class

   '''<summary>
   '''Row event argument class
   '''</summary>
   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
   Public Class ResumenPorCategoriaFiscalRowChangeEvent
      Inherits Global.System.EventArgs

      Private eventRow As ResumenPorCategoriaFiscalRow

      Private eventAction As Global.System.Data.DataRowAction

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public Sub New(ByVal row As ResumenPorCategoriaFiscalRow, ByVal action As Global.System.Data.DataRowAction)
         MyBase.New()
         Me.eventRow = row
         Me.eventAction = action
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Row() As ResumenPorCategoriaFiscalRow
         Get
            Return Me.eventRow
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
       Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
      Public ReadOnly Property Action() As Global.System.Data.DataRowAction
         Get
            Return Me.eventAction
         End Get
      End Property
   End Class
End Class

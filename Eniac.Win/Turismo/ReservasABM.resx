<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnConsultar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
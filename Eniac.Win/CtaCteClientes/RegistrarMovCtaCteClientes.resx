<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tspMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>68</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAACAAAAAiYkJgp0b3QWmJSYFJiWmAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAgAAAAOAAAAGFhVWD6cmJyFpKWku52mntGdpZ7Pnp6er52Y
        nGyWk5UcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAQAAAAIAAAADAAAABQfFgkkSz4pRl9TPnSPh32tsruw5YC0fv9Nr07/OLRB/zy1
        Sv9TsGH/eqaB/Zufm8uZlZhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAABgAAAAoAAAAOCgYAHDUqFzZeUjxgfHBcl5eMe8mmnY/tq6Wf/ay+qP9Gpjv/F6gR/yC3
        JP9LxVX/SMpa/ynIR/8sw0r/VrBn/5eimOOYlJdIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgIAAAooHgwkT0IsSnFlUHyRhXOzrqSV38jAs/nY0cf/4dnQ/9DKw/+9xbn/QJkw/xSb
        A/8YqBL/Q7pF/8HOwv+007n/O8ta/y3KUv8nx0X/U7Bh/5qemsuTkJMcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACOelcikoVvk6Wbis2+tqjx19DF/+vk2v/17uT/9u/l//Hq4P/l3tX/z8rJ/3en
        bf8XjAD/GJYE/xiiD/9GtUb/v8O//7TLt/86yFX/KcZI/ybHQf8jwDf/dqV7/ZyXnGwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKuWcTba0MDr9O3k//fx5//17uX/8+zi//Hq4P/w6N//7ufd/93X
        zv/Fx8L/R5E0/x2KA/8rmBf/K6If/1GzTv+2u7b/rcKw/0XFVv81xEr/MsRF/x7CLf9LrVH/np6esZmY
        mQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYjUABNnLtKX27+T/9/Dm//Xu5P/x6uD/7+fe/+7n
        3f/u593/3NbP/8PGwP9mo1P/ba1d/8fZxP+80Lr/tsa1/7i5uP+0uLX/qsCs/63FsP+ry67/PsRE/zKx
        Nf+cpJzPmJSYFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyrmcZvDo2//17uT/9e7k//Ps
        4v/u593/6OHX/+ff1v/W0Mn/w8bB/5u/jf+006r/8fPx/9/j3v/T1tP/ysrK/7y8vP+0uLP/uLy3/7jD
        uP9CvkH/MK4t/6CqoNOalZoWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCsJBO6uLU+/Lr
        4f/x6uD/8Onf//Dp3//r5Nr/5NzT/9TOxv/ExML/rsWj/6XJlv+ozJv/gLly/4C5df/a3dr/wM+//1Ow
        S/9Grz7/R7U//yi0Hv9OrUf/rrCuu5SRlAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMCu
        jkrn3tD57uje/+7m3f/t5tz/7eXc/+zl2//o4df/2dHI/8XCwP+7xrb/q8ue/57Ejv+Pv3//m8iP//Hz
        8P/X5dT/XbVO/0mxOf9FszX/O7Er/4e1gv+2sreBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAv62NSuTbzvnr5Nr/6uPZ/+ni2P/p4tj/6OHX/+jh1//k3dP/y8bA/8HCv/+7zLL/rs2g/6HG
        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
        AH//AAB//zgB///4//////////////////8=
</value>
  </data>
</root>
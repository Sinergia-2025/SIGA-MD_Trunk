<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>106, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>45</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wA=
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tspFacturacion.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAASCSURBVEhL5VVdTJNnFEZNMcYYdYk36thuvJCE4I0RxKUS
        L0nUZRISCFFQ1GodiBoZNRCGVDDRRISVFGgZFXEUHG1RYbSU0tofoFVba/kphaYINcBIu7nFuvHsvF0N
        y1CD29WyJ3nSL/3e9znnPOe87xf1v0B0ZmZmTEVFBVckEh1iZM/p6emfsHd/Lvln4JSWlu5WqVRVWq3W
        SQwolcoQ48DAQEBvsTxTdXSIBALBHlr7YYFSUlI2Njc3F/bp9VMGvR4WjQb2+/fhunsXzqYm2BoaYLlz
        B1adDoNWq/9bmawoISHho8j294PL5W5ob2+vpIxfmXt6MNbZiUm5HD6JBN6qKkxcvYrxkhK4Cwrw5MIF
        mKqrYbfZQi2traLlBOGwzJn4oFqNyY4O+G7dglcsxviNG/CUl2OsqAhuEnafPo2x7GwMpaXBePEiHFZr
        qK6urpg03m2XUChM1Ol0kyYS9ykU8JEd84ODmCMrPFeuwC0QwJ2fDzefD299PSaoqrHUVLj27oWJAhsM
        hmk+n/9ZRG4JONTASkNfH0aUSnhp83x/P7CwgIXXrzHX1YXRvDyMHj8Or1SKseFh2B0ODF+7Bk9CAh7t
        3AljSwvqpdIa0lpaRVpa2se6vj67mYS81ERPZSVmqRImvgDgZTCI8Zs34SotxWOqigYAuu5uDFE1nm3b
        4I6Jge7kSXyvUDyjPn4akV1EeXn5HqPJNG+jhjK/3UIhHOSxh36DMzOY9vsx4nRi0GyGmprfRVU6jhzB
        +OrVmFi1Cj76NVMVitu3gzk8XnJEdhFisfhz1lw7lT9aXIz+ffugWbMGWg4HQ+T7iMsFmn+oaWQ7792D
        6+hRPI+OxlRUFKaJfqJ9yxa0NzaGcvPzUyOyi3gTwHb9Osy7dqF75UpoaNNDCuA4dQpWiyUs3kHi3Q8e
        wH3iBGYpwCytYZwjOjdvhry+PsTPzV0agFlkIovUlNkbcT0J2MlXq9EYtoVlzsQ1Wi3MNFnPeTwEyZoA
        rf2JaNu+HY0SSTA7O3upRazJJovF/sO5c1DTYh3x0eHDsJpMUJNgl0qFYQo+cewYLL296KdGP7XZMEdT
        9Qut/ZmoOXAA39TUvL3JhPCYmmn+OzdtgpE2PKEMe0msiw7cUFZW2JIgWfaCRJ9arRiiUZ0/fx4hWju5
        di1aLl9GiVD49jFlKCgoSKRGTqrplBpYANr0mLJ2pafDT1b8GMn0FQUK0IQFqNrf1q0LV9Czfz+oj9MZ
        GRnvPGgMnAaZLHxVaGiDdcUKuKkfPuILEpknvmQBiL/TO9D/v9KzOTERTbW1ocJLl95/VTDEx8dv+E4u
        D192D2l6bOvXw0siM0TWTJYts4QFmaYKteR7U11d6OuyMlFsbOzybtS4uLiNNWJxodFonDI1N8NAB8q6
        YweGt27FKM26PTYW2oMHIS8rA11w/q8EgqJli/8FHB6Pt7tWKq1uUyqdbW1tAYVMFmqVSELkdYBNC8ua
        vnYf/sH5G6KTkpJicnJyuF+ePfvFmby8Q1lZWdzk5OR//cn8LyAq6g8GCSCP7rcQagAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>
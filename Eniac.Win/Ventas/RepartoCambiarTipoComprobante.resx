<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tstBarra.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
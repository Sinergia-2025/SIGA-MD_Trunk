<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tstBarra.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
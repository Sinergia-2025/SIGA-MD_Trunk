<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tstBarra.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
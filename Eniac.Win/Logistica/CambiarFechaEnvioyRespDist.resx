<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tstBarra.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAc4SURBVFhH7Vd7TJP3GgZc1C1ZtmWXnMwRshNMNpbMMBgc
        dGxz2UUuiyaMyaaLxAEq/DFx1+waYDBK2JYhB50xMGCKdtxEqFBogQJSKm2peKP9WlquIqCyc9AzoDx7
        fqU17kw9Grfzx8l5kyf9aL/vfd7f+z7v+354/d9uw7wJHzfE9Z9ugmRxYGDgwykpKWHZ2dlx+fn52/Ly
        8pLF9ZYtW1atWLFiGe9Z4r73DzPh7E4ShJSWlmY1Nzdrjx07NmE0GmcMRuN8j8k033vixIzeYJhUq9W6
        wsLCnE2bNv2Nz9zlfva2zCcyMtKvuLg4s729fZDE0Gg0aG5qgqahAdr6emhra6E5dAhtvNbrdOgzm9HV
        1TVcUFAgCw8Pf1T4WHB167YoISEhSKFQKOnQqVKp0KZU4hTJHSQdkssx+MMPGNi9G/15eejLzUW3TIbm
        XbvQ3d4Os8XirKysVMfFxYUKXwsub958BLlSqezSarVo5OnOtLRgVKHA8IEDGCgqgoNE9u++Q39ODmwZ
        GbB++ils778PyzvvQEu08B673Y7a2lqDO4ibzoT36tWr/erq6uoFuYrkDpKPVFZioKQEjr17YS8oQP+3
        38KWnQ1rWhqsH38M6d13ISUnw/L227C+9RZ61q9HEzMyMDAAuVyuDg4O/qvwvUBxY1taVFSU0aXTOcXJ
        7c3NGGa6BfloTY0rAzam25aVBesXX0D66CNIqamwbNuGfmbB/vnnkGJjIb36KowvvYRWlscsSfPslBz6
        FsK8oXknJiY+ffToUYeaNT9FCHIHaz3O67lLlzBz4QJGfvwR0iefQPrgA1fKLUlJsGdmYshkgq2311US
        6eWXYQ0PR8dzz0FP7TSqVMMxMTErBccC1bVtcUlJyZcutfP0Q1VVsDPlIv1z09Pw2MzkJIYoPnNKCsxM
        uZ2EgySn8GA6fhymjg7Y+L0UFARLQACUvDb29CAjIyOXHGJOXNsCAgL+wl7u0LS1oZdKHygshC0/H4PF
        xZiZmHDTA3NOJ6ZY2z7W/NSbb6KPquccQBufU1MvepaqPzoatscfh93fHx1PPIH2ujrwcN3+/v6PuOl+
        b8nJyaE6nW5MzZRJZWWwsX5W1ltieh0M5DJVPTs3h6mpKYyePQtbZydOsjSdXV1QsT1rjxyBZv9+WFau
        hPWOO9B/991wPPAATt9/P+qpmaqamvNr164Nd9P9zrwzMzNf0+v1v7TwBLbvv4fEFrOkp8P0xhtoXbYM
        3c8/j3GjEaNjY5AkCcdZb60gZxC1bNE2kttI7vDywgAxKODtDQehYGccVihmN2/evEFwLVD+1rw52xNZ
        K2dHRQVs33wDM1XdRdLGpUvRSGdqoueZZ9DPkwvyTn66yJlejegUko/wHoFR4uxVaIqIwKHa2vmtW7em
        kOuaM8EVAEXkbGermT/7DEeDg6H08UETHQjyNsJEklNq9ZWTc164Tt9JoY6sWoVzvGfcjYmroHrlFZRX
        Vc0nJSVdP4D09PTXGMAvqtJSdLKFlEydh1xD9JD8JLtDy5nvObkgb+BeUHFeGLkTxpmhi7xX4IIbk0Qd
        Z8O+gwdnuaiuWwIvzoBQqnlMtW8fjjz00BXyVsLw7+Si5ky7luVSUfliSXXytzO85+Kzz+IffMYDUY7K
        997D3sLC81FRUdcVoZefn5+rDbvZx9Xs32Y+2ELoHnsMJ6nwK+S8bqfgRsLCcC40FCbOC0He3d2NHmqj
        nyWafvJJXOKzl4kT992Hg9wdsq+/vnEb0hbv2bPnyz4OlOrERFcAou6Gp56CkW3WRMce8iFmRNR2irjI
        QPqYEUF+8vRp2PV6XOZ3/+Jv08SRF17Afupqx44dNx5ENO8NGzY83anVOnSNjajx9UUnHRyjFnqjotBK
        oQlyoXYhtvPEz4Q45TS/c4hVzSxcev11zFK8s/z+zL33Qs6OKti9e5jvFv9xFAtbunPnzgwuEKeSA0i1
        ZAkMdHSCDi2BgXCwNCMMSKhcCO2fhAhAkM1y4s2yJM5Fi+Dk3+f4WZmQgH0HDsxv3779ppaRMO+wsDC/
        ioqKeofDgXpuOg2DOE2HEiEGjBCVSL8nAJHqGUKQzhMgxjkJa2JiUF5eLnbALa1jYT6xsbFBHBxdg0ND
        aOXeb2FXWOh4iBCD5eoARAY8AYhP8z33uE4uyGUymYGpv6UXEo8tWrduXVBZWZmyj+UwcD8oWVvtgw/C
        ynKMkUgE4Gm1SZblDNXe8OKLkPNlpUwud4qTu8lv+ZXMYz6iHFlZWZkNSuWggSu3g13Q+NVXUMbHo5Ub
        rzUyEvVxcaj+8EPIuT+E2v++a9dwamqqLCQk5LZeSj0m6nYnB0hIWlpaFt+WtFWHD0/UKBQzYraXV1fP
        l/3008zeoqJJWW6ujq2Ws2bNmj/stfxqE84W+/r6PhwdHR0WHx+/nnN9q8DGjRvjIiIiVi1fvvxP+cfk
        eiZIRHoF/iuE/4vm5fUrT+RrLV6b2MwAAAAASUVORK5CYII=
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tstBarra.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
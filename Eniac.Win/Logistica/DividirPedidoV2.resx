<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tstBarra.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
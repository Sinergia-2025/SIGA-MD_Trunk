<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tstBarra.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
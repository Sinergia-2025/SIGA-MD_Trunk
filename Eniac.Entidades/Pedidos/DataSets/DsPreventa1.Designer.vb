'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),
 Global.System.ComponentModel.ToolboxItem(True),
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),
 Global.System.Xml.Serialization.XmlRootAttribute("DsPreventa"),
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>
Partial Public Class DsPreventa
   Inherits Global.System.Data.DataSet

   Private tableArchivo As ArchivoDataTable

   Private tablePedido As PedidoDataTable

   Private tablePedidoProducto As PedidoProductoDataTable

   Private relationArchivo_DataTable1 As Global.System.Data.DataRelation

   Private relationArchivo_PedidoProducto As Global.System.Data.DataRelation

   Private relationPedido_PedidoProducto As Global.System.Data.DataRelation

   Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Public Sub New()
      MyBase.New
      Me.BeginInit()
      Me.InitClass()
      Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
      AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
      AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
      Me.EndInit()
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
      MyBase.New(info, context, False)
      If (Me.IsBinarySerialized(info, context) = True) Then
         Me.InitVars(False)
         Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
         AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
         AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
         Return
      End If
      Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
      If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
         Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
         ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
         If (Not (ds.Tables("Archivo")) Is Nothing) Then
            MyBase.Tables.Add(New ArchivoDataTable(ds.Tables("Archivo")))
         End If
         If (Not (ds.Tables("Pedido")) Is Nothing) Then
            MyBase.Tables.Add(New PedidoDataTable(ds.Tables("Pedido")))
         End If
         If (Not (ds.Tables("PedidoProducto")) Is Nothing) Then
            MyBase.Tables.Add(New PedidoProductoDataTable(ds.Tables("PedidoProducto")))
         End If
         Me.DataSetName = ds.DataSetName
         Me.Prefix = ds.Prefix
         Me.Namespace = ds.Namespace
         Me.Locale = ds.Locale
         Me.CaseSensitive = ds.CaseSensitive
         Me.EnforceConstraints = ds.EnforceConstraints
         Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
         Me.InitVars()
      Else
         Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
      End If
      Me.GetSerializationData(info, context)
      Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
      AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
      AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
   Public ReadOnly Property Archivo() As ArchivoDataTable
      Get
         Return Me.tableArchivo
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
   Public ReadOnly Property Pedido() As PedidoDataTable
      Get
         Return Me.tablePedido
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.Browsable(False),
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>
   Public ReadOnly Property PedidoProducto() As PedidoProductoDataTable
      Get
         Return Me.tablePedidoProducto
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.BrowsableAttribute(True),
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>
   Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
      Get
         Return Me._schemaSerializationMode
      End Get
      Set
         Me._schemaSerializationMode = Value
      End Set
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>
   Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
      Get
         Return MyBase.Tables
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>
   Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
      Get
         Return MyBase.Relations
      End Get
   End Property

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Protected Overrides Sub InitializeDerivedDataSet()
      Me.BeginInit()
      Me.InitClass()
      Me.EndInit()
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Public Overrides Function Clone() As Global.System.Data.DataSet
      Dim cln As DsPreventa = CType(MyBase.Clone, DsPreventa)
      cln.InitVars()
      cln.SchemaSerializationMode = Me.SchemaSerializationMode
      Return cln
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Protected Overrides Function ShouldSerializeTables() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Protected Overrides Function ShouldSerializeRelations() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
      If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
         Me.Reset()
         Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
         ds.ReadXml(reader)
         If (Not (ds.Tables("Archivo")) Is Nothing) Then
            MyBase.Tables.Add(New ArchivoDataTable(ds.Tables("Archivo")))
         End If
         If (Not (ds.Tables("Pedido")) Is Nothing) Then
            MyBase.Tables.Add(New PedidoDataTable(ds.Tables("Pedido")))
         End If
         If (Not (ds.Tables("PedidoProducto")) Is Nothing) Then
            MyBase.Tables.Add(New PedidoProductoDataTable(ds.Tables("PedidoProducto")))
         End If
         Me.DataSetName = ds.DataSetName
         Me.Prefix = ds.Prefix
         Me.Namespace = ds.Namespace
         Me.Locale = ds.Locale
         Me.CaseSensitive = ds.CaseSensitive
         Me.EnforceConstraints = ds.EnforceConstraints
         Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
         Me.InitVars()
      Else
         Me.ReadXml(reader)
         Me.InitVars()
      End If
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
      Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
      Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
      stream.Position = 0
      Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Friend Overloads Sub InitVars()
      Me.InitVars(True)
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Friend Overloads Sub InitVars(ByVal initTable As Boolean)
      Me.tableArchivo = CType(MyBase.Tables("Archivo"), ArchivoDataTable)
      If (initTable = True) Then
         If (Not (Me.tableArchivo) Is Nothing) Then
            Me.tableArchivo.InitVars()
         End If
      End If
      Me.tablePedido = CType(MyBase.Tables("Pedido"), PedidoDataTable)
      If (initTable = True) Then
         If (Not (Me.tablePedido) Is Nothing) Then
            Me.tablePedido.InitVars()
         End If
      End If
      Me.tablePedidoProducto = CType(MyBase.Tables("PedidoProducto"), PedidoProductoDataTable)
      If (initTable = True) Then
         If (Not (Me.tablePedidoProducto) Is Nothing) Then
            Me.tablePedidoProducto.InitVars()
         End If
      End If
      Me.relationArchivo_DataTable1 = Me.Relations("Archivo_DataTable1")
      Me.relationArchivo_PedidoProducto = Me.Relations("Archivo_PedidoProducto")
      Me.relationPedido_PedidoProducto = Me.Relations("Pedido_PedidoProducto")
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Private Sub InitClass()
      Me.DataSetName = "DsPreventa"
      Me.Prefix = ""
      Me.Namespace = "http://tempuri.org/DsPreventa.xsd"
      Me.EnforceConstraints = True
      Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
      Me.tableArchivo = New ArchivoDataTable()
      MyBase.Tables.Add(Me.tableArchivo)
      Me.tablePedido = New PedidoDataTable()
      MyBase.Tables.Add(Me.tablePedido)
      Me.tablePedidoProducto = New PedidoProductoDataTable()
      MyBase.Tables.Add(Me.tablePedidoProducto)
      Me.relationArchivo_DataTable1 = New Global.System.Data.DataRelation("Archivo_DataTable1", New Global.System.Data.DataColumn() {Me.tableArchivo.NombreArchivoColumn}, New Global.System.Data.DataColumn() {Me.tablePedido.NombreArchivoColumn}, False)
      Me.Relations.Add(Me.relationArchivo_DataTable1)
      Me.relationArchivo_PedidoProducto = New Global.System.Data.DataRelation("Archivo_PedidoProducto", New Global.System.Data.DataColumn() {Me.tableArchivo.NombreArchivoColumn}, New Global.System.Data.DataColumn() {Me.tablePedidoProducto.NombreArchivoColumn}, False)
      Me.Relations.Add(Me.relationArchivo_PedidoProducto)
      Me.relationPedido_PedidoProducto = New Global.System.Data.DataRelation("Pedido_PedidoProducto", New Global.System.Data.DataColumn() {Me.tablePedido.NombreArchivoColumn, Me.tablePedido.NumeroPedidoColumn, Me.tablePedido.CentroEmisorColumn, Me.tablePedido.LetraColumn, Me.tablePedido.IdTipoComprobanteColumn, Me.tablePedido.IdSucursalColumn}, New Global.System.Data.DataColumn() {Me.tablePedidoProducto.NombreArchivoColumn, Me.tablePedidoProducto.NumeroPedidoColumn, Me.tablePedidoProducto.CentroEmisorColumn, Me.tablePedidoProducto.LetraColumn, Me.tablePedidoProducto.IdTipoComprobanteColumn, Me.tablePedidoProducto.IdSucursalColumn}, False)
      Me.Relations.Add(Me.relationPedido_PedidoProducto)
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Private Function ShouldSerializeArchivo() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Private Function ShouldSerializePedido() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Private Function ShouldSerializePedidoProducto() As Boolean
      Return False
   End Function

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
      If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
         Me.InitVars()
      End If
   End Sub

   <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
      Dim ds As DsPreventa = New DsPreventa()
      Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
      Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
      Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
      any.Namespace = ds.Namespace
      sequence.Items.Add(any)
      type.Particle = sequence
      Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
      If xs.Contains(dsSchema.TargetNamespace) Then
         Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
         Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
         Try
            Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
            dsSchema.Write(s1)
            Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
            Do While schemas.MoveNext
               schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
               s2.SetLength(0)
               schema.Write(s2)
               If (s1.Length = s2.Length) Then
                  s1.Position = 0
                  s2.Position = 0

                  Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                  Loop
                  If (s1.Position = s1.Length) Then
                     Return type
                  End If
               End If

            Loop
         Finally
            If (Not (s1) Is Nothing) Then
               s1.Close()
            End If
            If (Not (s2) Is Nothing) Then
               s2.Close()
            End If
         End Try
      End If
      xs.Add(dsSchema)
      Return type
   End Function

   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Public Delegate Sub ArchivoRowChangeEventHandler(ByVal sender As Object, ByVal e As ArchivoRowChangeEvent)

   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Public Delegate Sub PedidoRowChangeEventHandler(ByVal sender As Object, ByVal e As PedidoRowChangeEvent)

   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
   Public Delegate Sub PedidoProductoRowChangeEventHandler(ByVal sender As Object, ByVal e As PedidoProductoRowChangeEvent)

   '''<summary>
   '''Represents the strongly named DataTable class.
   '''</summary>
   <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
   Partial Public Class ArchivoDataTable
      Inherits Global.System.Data.TypedTableBase(Of ArchivoRow)

      Private columnIdRuta As Global.System.Data.DataColumn

      Private columnNombreRuta As Global.System.Data.DataColumn

      Private columnIdVendedor As Global.System.Data.DataColumn

      Private columnNombreVendedor As Global.System.Data.DataColumn

      Private columnNombreArchivo As Global.System.Data.DataColumn

      Private columnPathCompletoArchivo As Global.System.Data.DataColumn

      Private columnFormatoArchivo As Global.System.Data.DataColumn

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub New()
         MyBase.New
         Me.TableName = "Archivo"
         Me.BeginInit()
         Me.InitClass()
         Me.EndInit()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Friend Sub New(ByVal table As Global.System.Data.DataTable)
         MyBase.New
         Me.TableName = table.TableName
         If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
            Me.CaseSensitive = table.CaseSensitive
         End If
         If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
            Me.Locale = table.Locale
         End If
         If (table.Namespace <> table.DataSet.Namespace) Then
            Me.Namespace = table.Namespace
         End If
         Me.Prefix = table.Prefix
         Me.MinimumCapacity = table.MinimumCapacity
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
         MyBase.New(info, context)
         Me.InitVars()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdRutaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdRuta
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NombreRutaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreRuta
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdVendedorColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdVendedor
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NombreVendedorColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreVendedor
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NombreArchivoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreArchivo
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PathCompletoArchivoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPathCompletoArchivo
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property FormatoArchivoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnFormatoArchivo
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
      Public ReadOnly Property Count() As Integer
         Get
            Return Me.Rows.Count
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Default Public ReadOnly Property Item(ByVal index As Integer) As ArchivoRow
         Get
            Return CType(Me.Rows(index), ArchivoRow)
         End Get
      End Property

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Event ArchivoRowChanging As ArchivoRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Event ArchivoRowChanged As ArchivoRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Event ArchivoRowDeleting As ArchivoRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Event ArchivoRowDeleted As ArchivoRowChangeEventHandler

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Overloads Sub AddArchivoRow(ByVal row As ArchivoRow)
         Me.Rows.Add(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Overloads Function AddArchivoRow(ByVal IdRuta As Integer, ByVal NombreRuta As String, ByVal IdVendedor As Integer, ByVal NombreVendedor As String, ByVal NombreArchivo As String, ByVal PathCompletoArchivo As String, ByVal FormatoArchivo As Object) As ArchivoRow
         Dim rowArchivoRow As ArchivoRow = CType(Me.NewRow, ArchivoRow)
         Dim columnValuesArray() As Object = New Object() {IdRuta, NombreRuta, IdVendedor, NombreVendedor, NombreArchivo, PathCompletoArchivo, FormatoArchivo}
         rowArchivoRow.ItemArray = columnValuesArray
         Me.Rows.Add(rowArchivoRow)
         Return rowArchivoRow
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function FindByNombreArchivo(ByVal NombreArchivo As String) As ArchivoRow
         Return CType(Me.Rows.Find(New Object() {NombreArchivo}), ArchivoRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Overrides Function Clone() As Global.System.Data.DataTable
         Dim cln As ArchivoDataTable = CType(MyBase.Clone, ArchivoDataTable)
         cln.InitVars()
         Return cln
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
         Return New ArchivoDataTable()
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Friend Sub InitVars()
         Me.columnIdRuta = MyBase.Columns("IdRuta")
         Me.columnNombreRuta = MyBase.Columns("NombreRuta")
         Me.columnIdVendedor = MyBase.Columns("IdVendedor")
         Me.columnNombreVendedor = MyBase.Columns("NombreVendedor")
         Me.columnNombreArchivo = MyBase.Columns("NombreArchivo")
         Me.columnPathCompletoArchivo = MyBase.Columns("PathCompletoArchivo")
         Me.columnFormatoArchivo = MyBase.Columns("FormatoArchivo")
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Private Sub InitClass()
         Me.columnIdRuta = New Global.System.Data.DataColumn("IdRuta", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdRuta)
         Me.columnNombreRuta = New Global.System.Data.DataColumn("NombreRuta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreRuta)
         Me.columnIdVendedor = New Global.System.Data.DataColumn("IdVendedor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdVendedor)
         Me.columnNombreVendedor = New Global.System.Data.DataColumn("NombreVendedor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreVendedor)
         Me.columnNombreArchivo = New Global.System.Data.DataColumn("NombreArchivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreArchivo)
         Me.columnPathCompletoArchivo = New Global.System.Data.DataColumn("PathCompletoArchivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPathCompletoArchivo)
         Me.columnFormatoArchivo = New Global.System.Data.DataColumn("FormatoArchivo", GetType(Object), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFormatoArchivo)
         Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnNombreArchivo}, True))
         Me.columnIdRuta.Caption = "Cod."
         Me.columnNombreRuta.Caption = "Ruta"
         Me.columnIdVendedor.Caption = "Tipo"
         Me.columnNombreVendedor.Caption = "Vendedor"
         Me.columnNombreArchivo.AllowDBNull = False
         Me.columnNombreArchivo.Unique = True
         Me.columnNombreArchivo.Caption = "Archivo"
         Me.columnPathCompletoArchivo.Caption = "Path Completo"
         Me.columnFormatoArchivo.Caption = "Formato"
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function NewArchivoRow() As ArchivoRow
         Return CType(Me.NewRow, ArchivoRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
         Return New ArchivoRow(builder)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Function GetRowType() As Global.System.Type
         Return GetType(ArchivoRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanged(e)
         If (Not (Me.ArchivoRowChangedEvent) Is Nothing) Then
            RaiseEvent ArchivoRowChanged(Me, New ArchivoRowChangeEvent(CType(e.Row, ArchivoRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanging(e)
         If (Not (Me.ArchivoRowChangingEvent) Is Nothing) Then
            RaiseEvent ArchivoRowChanging(Me, New ArchivoRowChangeEvent(CType(e.Row, ArchivoRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleted(e)
         If (Not (Me.ArchivoRowDeletedEvent) Is Nothing) Then
            RaiseEvent ArchivoRowDeleted(Me, New ArchivoRowChangeEvent(CType(e.Row, ArchivoRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleting(e)
         If (Not (Me.ArchivoRowDeletingEvent) Is Nothing) Then
            RaiseEvent ArchivoRowDeleting(Me, New ArchivoRowChangeEvent(CType(e.Row, ArchivoRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub RemoveArchivoRow(ByVal row As ArchivoRow)
         Me.Rows.Remove(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
         Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
         Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
         Dim ds As DsPreventa = New DsPreventa()
         Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any1.Namespace = "http://www.w3.org/2001/XMLSchema"
         any1.MinOccurs = New Decimal(0)
         any1.MaxOccurs = Decimal.MaxValue
         any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any1)
         Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
         any2.MinOccurs = New Decimal(1)
         any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any2)
         Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute1.Name = "namespace"
         attribute1.FixedValue = ds.Namespace
         type.Attributes.Add(attribute1)
         Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute2.Name = "tableTypeName"
         attribute2.FixedValue = "ArchivoDataTable"
         type.Attributes.Add(attribute2)
         type.Particle = sequence
         Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
         If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
               Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
               dsSchema.Write(s1)
               Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
               Do While schemas.MoveNext
                  schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                  s2.SetLength(0)
                  schema.Write(s2)
                  If (s1.Length = s2.Length) Then
                     s1.Position = 0
                     s2.Position = 0

                     Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                     Loop
                     If (s1.Position = s1.Length) Then
                        Return type
                     End If
                  End If

               Loop
            Finally
               If (Not (s1) Is Nothing) Then
                  s1.Close()
               End If
               If (Not (s2) Is Nothing) Then
                  s2.Close()
               End If
            End Try
         End If
         xs.Add(dsSchema)
         Return type
      End Function
   End Class

   '''<summary>
   '''Represents the strongly named DataTable class.
   '''</summary>
   <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
   Partial Public Class PedidoDataTable
      Inherits Global.System.Data.TypedTableBase(Of PedidoRow)

      Private columnNombreArchivo As Global.System.Data.DataColumn

      Private columnIdSucursal As Global.System.Data.DataColumn

      Private columnIdTipoComprobante As Global.System.Data.DataColumn

      Private columnLetra As Global.System.Data.DataColumn

      Private columnCentroEmisor As Global.System.Data.DataColumn

      Private columnNumeroPedido As Global.System.Data.DataColumn

      Private columnPasa As Global.System.Data.DataColumn

      Private columnIdRuta As Global.System.Data.DataColumn

      Private columnNombreRuta As Global.System.Data.DataColumn

      Private columnEstado As Global.System.Data.DataColumn

      Private columnMensajeError As Global.System.Data.DataColumn

      Private columnFechaPedido As Global.System.Data.DataColumn

      Private columnIdCliente As Global.System.Data.DataColumn

      Private columnCodigoCliente As Global.System.Data.DataColumn

      Private columnTipoDocCliente As Global.System.Data.DataColumn

      Private columnNroDocCliente As Global.System.Data.DataColumn

      Private columnNombreCliente As Global.System.Data.DataColumn

      Private columnDireccion As Global.System.Data.DataColumn

      Private columnNombreCategoriaFiscalAbrev As Global.System.Data.DataColumn

      Private columnCUIT As Global.System.Data.DataColumn

      Private columnIdTransportista As Global.System.Data.DataColumn

      Private columnNombreTransportista As Global.System.Data.DataColumn

      Private columnIdEstadoVenta As Global.System.Data.DataColumn

      Private columnNombreEstadoVenta As Global.System.Data.DataColumn

      Private columnObservaciones As Global.System.Data.DataColumn

      Private columnImporteTotal As Global.System.Data.DataColumn

      Private columnPorcDesc As Global.System.Data.DataColumn

      Private columnIdWeb As Global.System.Data.DataColumn

      Private columnIdTipoComprobanteFact As Global.System.Data.DataColumn

      Private columnIdFormasPago As Global.System.Data.DataColumn

      Private columnFechaPedido_Fecha As Global.System.Data.DataColumn

      Private columnFechaPedido_Hora As Global.System.Data.DataColumn

      Private columnFechaRecepcionWeb As Global.System.Data.DataColumn

      Private columnPedidoWeb As Global.System.Data.DataColumn

      Private columnConError_FaltaTransportista As Global.System.Data.DataColumn

      Private columnConError_EstadoVisitaInexistente As Global.System.Data.DataColumn

      Private columnConError_ClienteInexistente As Global.System.Data.DataColumn

      Private columnConError_PedidoYaExiste As Global.System.Data.DataColumn

      Private columnEstadoGrabacion As Global.System.Data.DataColumn

      Private columnNroVersionRemoto As Global.System.Data.DataColumn

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub New()
         MyBase.New
         Me.TableName = "Pedido"
         Me.BeginInit()
         Me.InitClass()
         Me.EndInit()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Friend Sub New(ByVal table As Global.System.Data.DataTable)
         MyBase.New
         Me.TableName = table.TableName
         If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
            Me.CaseSensitive = table.CaseSensitive
         End If
         If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
            Me.Locale = table.Locale
         End If
         If (table.Namespace <> table.DataSet.Namespace) Then
            Me.Namespace = table.Namespace
         End If
         Me.Prefix = table.Prefix
         Me.MinimumCapacity = table.MinimumCapacity
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
         MyBase.New(info, context)
         Me.InitVars()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NombreArchivoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreArchivo
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdSucursalColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdSucursal
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdTipoComprobanteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdTipoComprobante
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property LetraColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnLetra
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property CentroEmisorColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnCentroEmisor
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NumeroPedidoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNumeroPedido
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PasaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPasa
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdRutaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdRuta
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NombreRutaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreRuta
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property EstadoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnEstado
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property MensajeErrorColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnMensajeError
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property FechaPedidoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnFechaPedido
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdClienteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdCliente
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property CodigoClienteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnCodigoCliente
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property TipoDocClienteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnTipoDocCliente
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NroDocClienteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroDocCliente
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NombreClienteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreCliente
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property DireccionColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnDireccion
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NombreCategoriaFiscalAbrevColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreCategoriaFiscalAbrev
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property CUITColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnCUIT
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdTransportistaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdTransportista
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NombreTransportistaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreTransportista
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdEstadoVentaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdEstadoVenta
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NombreEstadoVentaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreEstadoVenta
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property ObservacionesColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnObservaciones
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property ImporteTotalColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnImporteTotal
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PorcDescColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPorcDesc
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdWebColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdWeb
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdTipoComprobanteFactColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdTipoComprobanteFact
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdFormasPagoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdFormasPago
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property FechaPedido_FechaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnFechaPedido_Fecha
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property FechaPedido_HoraColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnFechaPedido_Hora
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property FechaRecepcionWebColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnFechaRecepcionWeb
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PedidoWebColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPedidoWeb
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property ConError_FaltaTransportistaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnConError_FaltaTransportista
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property ConError_EstadoVisitaInexistenteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnConError_EstadoVisitaInexistente
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property ConError_ClienteInexistenteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnConError_ClienteInexistente
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property ConError_PedidoYaExisteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnConError_PedidoYaExiste
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property EstadoGrabacionColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnEstadoGrabacion
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NroVersionRemotoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNroVersionRemoto
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
      Public ReadOnly Property Count() As Integer
         Get
            Return Me.Rows.Count
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Default Public ReadOnly Property Item(ByVal index As Integer) As PedidoRow
         Get
            Return CType(Me.Rows(index), PedidoRow)
         End Get
      End Property

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Event PedidoRowChanging As PedidoRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Event PedidoRowChanged As PedidoRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Event PedidoRowDeleting As PedidoRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Event PedidoRowDeleted As PedidoRowChangeEventHandler

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Overloads Sub AddPedidoRow(ByVal row As PedidoRow)
         Me.Rows.Add(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Overloads Function AddPedidoRow(
                    ByVal parentArchivoRowByArchivo_DataTable1 As ArchivoRow,
                    ByVal IdSucursal As Integer,
                    ByVal IdTipoComprobante As String,
                    ByVal Letra As String,
                    ByVal CentroEmisor As Short,
                    ByVal NumeroPedido As Long,
                    ByVal Pasa As Boolean,
                    ByVal IdRuta As Integer,
                    ByVal NombreRuta As String,
                    ByVal Estado As Object,
                    ByVal MensajeError As String,
                    ByVal FechaPedido As Date,
                    ByVal IdCliente As Long,
                    ByVal CodigoCliente As Long,
                    ByVal TipoDocCliente As String,
                    ByVal NroDocCliente As Long,
                    ByVal NombreCliente As String,
                    ByVal Direccion As String,
                    ByVal NombreCategoriaFiscalAbrev As String,
                    ByVal CUIT As String,
                    ByVal IdTransportista As Integer,
                    ByVal NombreTransportista As String,
                    ByVal IdEstadoVenta As Integer,
                    ByVal NombreEstadoVenta As String,
                    ByVal Observaciones As String,
                    ByVal ImporteTotal As Decimal,
                    ByVal PorcDesc As Decimal,
                    ByVal IdWeb As Long,
                    ByVal IdTipoComprobanteFact As String,
                    ByVal IdFormasPago As Integer,
                    ByVal FechaPedido_Fecha As Date,
                    ByVal FechaPedido_Hora As String,
                    ByVal FechaRecepcionWeb As Date,
                    ByVal PedidoWeb As Object,
                    ByVal ConError_FaltaTransportista As Boolean,
                    ByVal ConError_EstadoVisitaInexistente As Boolean,
                    ByVal ConError_ClienteInexistente As Boolean,
                    ByVal ConError_PedidoYaExiste As Boolean,
                    ByVal EstadoGrabacion As String,
                    ByVal NroVersionRemoto As String) As PedidoRow
         Dim rowPedidoRow As PedidoRow = CType(Me.NewRow, PedidoRow)
         Dim columnValuesArray() As Object = New Object() {Nothing, IdSucursal, IdTipoComprobante, Letra, CentroEmisor, NumeroPedido, Pasa, IdRuta, NombreRuta, Estado, MensajeError, FechaPedido, IdCliente, CodigoCliente, TipoDocCliente, NroDocCliente, NombreCliente, Direccion, NombreCategoriaFiscalAbrev, CUIT, IdTransportista, NombreTransportista, IdEstadoVenta, NombreEstadoVenta, Observaciones, ImporteTotal, PorcDesc, IdWeb, IdTipoComprobanteFact, IdFormasPago, FechaPedido_Fecha, FechaPedido_Hora, FechaRecepcionWeb, PedidoWeb, ConError_FaltaTransportista, ConError_EstadoVisitaInexistente, ConError_ClienteInexistente, ConError_PedidoYaExiste, EstadoGrabacion, NroVersionRemoto}
         If (Not (parentArchivoRowByArchivo_DataTable1) Is Nothing) Then
            columnValuesArray(0) = parentArchivoRowByArchivo_DataTable1(4)
         End If
         rowPedidoRow.ItemArray = columnValuesArray
         Me.Rows.Add(rowPedidoRow)
         Return rowPedidoRow
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function FindByNombreArchivoNumeroPedidoCentroEmisorLetraIdTipoComprobanteIdSucursal(ByVal NombreArchivo As String, ByVal NumeroPedido As Long, ByVal CentroEmisor As Short, ByVal Letra As String, ByVal IdTipoComprobante As String, ByVal IdSucursal As Integer) As PedidoRow
         Return CType(Me.Rows.Find(New Object() {NombreArchivo, NumeroPedido, CentroEmisor, Letra, IdTipoComprobante, IdSucursal}), PedidoRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Overrides Function Clone() As Global.System.Data.DataTable
         Dim cln As PedidoDataTable = CType(MyBase.Clone, PedidoDataTable)
         cln.InitVars()
         Return cln
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
         Return New PedidoDataTable()
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Friend Sub InitVars()
         Me.columnNombreArchivo = MyBase.Columns("NombreArchivo")
         Me.columnIdSucursal = MyBase.Columns("IdSucursal")
         Me.columnIdTipoComprobante = MyBase.Columns("IdTipoComprobante")
         Me.columnLetra = MyBase.Columns("Letra")
         Me.columnCentroEmisor = MyBase.Columns("CentroEmisor")
         Me.columnNumeroPedido = MyBase.Columns("NumeroPedido")
         Me.columnPasa = MyBase.Columns("Pasa")
         Me.columnIdRuta = MyBase.Columns("IdRuta")
         Me.columnNombreRuta = MyBase.Columns("NombreRuta")
         Me.columnEstado = MyBase.Columns("Estado")
         Me.columnMensajeError = MyBase.Columns("MensajeError")
         Me.columnFechaPedido = MyBase.Columns("FechaPedido")
         Me.columnIdCliente = MyBase.Columns("IdCliente")
         Me.columnCodigoCliente = MyBase.Columns("CodigoCliente")
         Me.columnTipoDocCliente = MyBase.Columns("TipoDocCliente")
         Me.columnNroDocCliente = MyBase.Columns("NroDocCliente")
         Me.columnNombreCliente = MyBase.Columns("NombreCliente")
         Me.columnDireccion = MyBase.Columns("Direccion")
         Me.columnNombreCategoriaFiscalAbrev = MyBase.Columns("NombreCategoriaFiscalAbrev")
         Me.columnCUIT = MyBase.Columns("CUIT")
         Me.columnIdTransportista = MyBase.Columns("IdTransportista")
         Me.columnNombreTransportista = MyBase.Columns("NombreTransportista")
         Me.columnIdEstadoVenta = MyBase.Columns("IdEstadoVenta")
         Me.columnNombreEstadoVenta = MyBase.Columns("NombreEstadoVenta")
         Me.columnObservaciones = MyBase.Columns("Observaciones")
         Me.columnImporteTotal = MyBase.Columns("ImporteTotal")
         Me.columnPorcDesc = MyBase.Columns("PorcDesc")
         Me.columnIdWeb = MyBase.Columns("IdWeb")
         Me.columnIdTipoComprobanteFact = MyBase.Columns("IdTipoComprobanteFact")
         Me.columnIdFormasPago = MyBase.Columns("IdFormasPago")
         Me.columnFechaPedido_Fecha = MyBase.Columns("FechaPedido_Fecha")
         Me.columnFechaPedido_Hora = MyBase.Columns("FechaPedido_Hora")
         Me.columnFechaRecepcionWeb = MyBase.Columns("FechaRecepcionWeb")
         Me.columnPedidoWeb = MyBase.Columns("PedidoWeb")
         Me.columnConError_FaltaTransportista = MyBase.Columns("ConError_FaltaTransportista")
         Me.columnConError_EstadoVisitaInexistente = MyBase.Columns("ConError_EstadoVisitaInexistente")
         Me.columnConError_ClienteInexistente = MyBase.Columns("ConError_ClienteInexistente")
         Me.columnConError_PedidoYaExiste = MyBase.Columns("ConError_PedidoYaExiste")
         Me.columnEstadoGrabacion = MyBase.Columns("EstadoGrabacion")
         Me.columnNroVersionRemoto = MyBase.Columns("NroVersionRemoto")
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Private Sub InitClass()
         Me.columnNombreArchivo = New Global.System.Data.DataColumn("NombreArchivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreArchivo)
         Me.columnIdSucursal = New Global.System.Data.DataColumn("IdSucursal", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdSucursal)
         Me.columnIdTipoComprobante = New Global.System.Data.DataColumn("IdTipoComprobante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdTipoComprobante)
         Me.columnLetra = New Global.System.Data.DataColumn("Letra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnLetra)
         Me.columnCentroEmisor = New Global.System.Data.DataColumn("CentroEmisor", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnCentroEmisor)
         Me.columnNumeroPedido = New Global.System.Data.DataColumn("NumeroPedido", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNumeroPedido)
         Me.columnPasa = New Global.System.Data.DataColumn("Pasa", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPasa)
         Me.columnIdRuta = New Global.System.Data.DataColumn("IdRuta", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdRuta)
         Me.columnNombreRuta = New Global.System.Data.DataColumn("NombreRuta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreRuta)
         Me.columnEstado = New Global.System.Data.DataColumn("Estado", GetType(Object), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnEstado)
         Me.columnMensajeError = New Global.System.Data.DataColumn("MensajeError", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnMensajeError)
         Me.columnFechaPedido = New Global.System.Data.DataColumn("FechaPedido", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFechaPedido)
         Me.columnIdCliente = New Global.System.Data.DataColumn("IdCliente", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdCliente)
         Me.columnCodigoCliente = New Global.System.Data.DataColumn("CodigoCliente", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnCodigoCliente)
         Me.columnTipoDocCliente = New Global.System.Data.DataColumn("TipoDocCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnTipoDocCliente)
         Me.columnNroDocCliente = New Global.System.Data.DataColumn("NroDocCliente", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroDocCliente)
         Me.columnNombreCliente = New Global.System.Data.DataColumn("NombreCliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreCliente)
         Me.columnDireccion = New Global.System.Data.DataColumn("Direccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnDireccion)
         Me.columnNombreCategoriaFiscalAbrev = New Global.System.Data.DataColumn("NombreCategoriaFiscalAbrev", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreCategoriaFiscalAbrev)
         Me.columnCUIT = New Global.System.Data.DataColumn("CUIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnCUIT)
         Me.columnIdTransportista = New Global.System.Data.DataColumn("IdTransportista", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdTransportista)
         Me.columnNombreTransportista = New Global.System.Data.DataColumn("NombreTransportista", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreTransportista)
         Me.columnIdEstadoVenta = New Global.System.Data.DataColumn("IdEstadoVenta", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdEstadoVenta)
         Me.columnNombreEstadoVenta = New Global.System.Data.DataColumn("NombreEstadoVenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreEstadoVenta)
         Me.columnObservaciones = New Global.System.Data.DataColumn("Observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnObservaciones)
         Me.columnImporteTotal = New Global.System.Data.DataColumn("ImporteTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnImporteTotal)
         Me.columnPorcDesc = New Global.System.Data.DataColumn("PorcDesc", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPorcDesc)
         Me.columnIdWeb = New Global.System.Data.DataColumn("IdWeb", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdWeb)
         Me.columnIdTipoComprobanteFact = New Global.System.Data.DataColumn("IdTipoComprobanteFact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdTipoComprobanteFact)
         Me.columnIdFormasPago = New Global.System.Data.DataColumn("IdFormasPago", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdFormasPago)
         Me.columnFechaPedido_Fecha = New Global.System.Data.DataColumn("FechaPedido_Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFechaPedido_Fecha)
         Me.columnFechaPedido_Hora = New Global.System.Data.DataColumn("FechaPedido_Hora", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFechaPedido_Hora)
         Me.columnFechaRecepcionWeb = New Global.System.Data.DataColumn("FechaRecepcionWeb", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFechaRecepcionWeb)
         Me.columnPedidoWeb = New Global.System.Data.DataColumn("PedidoWeb", GetType(Object), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPedidoWeb)
         Me.columnConError_FaltaTransportista = New Global.System.Data.DataColumn("ConError_FaltaTransportista", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnConError_FaltaTransportista)
         Me.columnConError_EstadoVisitaInexistente = New Global.System.Data.DataColumn("ConError_EstadoVisitaInexistente", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnConError_EstadoVisitaInexistente)
         Me.columnConError_ClienteInexistente = New Global.System.Data.DataColumn("ConError_ClienteInexistente", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnConError_ClienteInexistente)
         Me.columnConError_PedidoYaExiste = New Global.System.Data.DataColumn("ConError_PedidoYaExiste", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnConError_PedidoYaExiste)
         Me.columnEstadoGrabacion = New Global.System.Data.DataColumn("EstadoGrabacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnEstadoGrabacion)
         Me.columnNroVersionRemoto = New Global.System.Data.DataColumn("NroVersionRemoto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNroVersionRemoto)
         Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnNombreArchivo, Me.columnNumeroPedido, Me.columnCentroEmisor, Me.columnLetra, Me.columnIdTipoComprobante, Me.columnIdSucursal}, True))
         Me.columnNombreArchivo.AllowDBNull = False
         Me.columnIdSucursal.AllowDBNull = False
         Me.columnIdTipoComprobante.AllowDBNull = False
         Me.columnLetra.AllowDBNull = False
         Me.columnCentroEmisor.AllowDBNull = False
         Me.columnNumeroPedido.AllowDBNull = False
         Me.columnIdRuta.Caption = "Ruta"
         Me.columnNombreRuta.Caption = "Nombre Ruta"
         Me.columnMensajeError.DefaultValue = CType("", String)
         Me.columnImporteTotal.DefaultValue = CType(0D, Decimal)
         Me.columnPorcDesc.DefaultValue = CType(0D, Decimal)
         Me.columnConError_FaltaTransportista.DefaultValue = CType(False, Boolean)
         Me.columnConError_EstadoVisitaInexistente.DefaultValue = CType(False, Boolean)
         Me.columnConError_ClienteInexistente.DefaultValue = CType(False, Boolean)
         Me.columnConError_PedidoYaExiste.DefaultValue = CType(False, Boolean)
         Me.columnEstadoGrabacion.DefaultValue = CType("PENDIENTE", String)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function NewPedidoRow() As PedidoRow
         Return CType(Me.NewRow, PedidoRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
         Return New PedidoRow(builder)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Function GetRowType() As Global.System.Type
         Return GetType(PedidoRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanged(e)
         If (Not (Me.PedidoRowChangedEvent) Is Nothing) Then
            RaiseEvent PedidoRowChanged(Me, New PedidoRowChangeEvent(CType(e.Row, PedidoRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanging(e)
         If (Not (Me.PedidoRowChangingEvent) Is Nothing) Then
            RaiseEvent PedidoRowChanging(Me, New PedidoRowChangeEvent(CType(e.Row, PedidoRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleted(e)
         If (Not (Me.PedidoRowDeletedEvent) Is Nothing) Then
            RaiseEvent PedidoRowDeleted(Me, New PedidoRowChangeEvent(CType(e.Row, PedidoRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleting(e)
         If (Not (Me.PedidoRowDeletingEvent) Is Nothing) Then
            RaiseEvent PedidoRowDeleting(Me, New PedidoRowChangeEvent(CType(e.Row, PedidoRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub RemovePedidoRow(ByVal row As PedidoRow)
         Me.Rows.Remove(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
         Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
         Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
         Dim ds As DsPreventa = New DsPreventa()
         Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any1.Namespace = "http://www.w3.org/2001/XMLSchema"
         any1.MinOccurs = New Decimal(0)
         any1.MaxOccurs = Decimal.MaxValue
         any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any1)
         Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
         any2.MinOccurs = New Decimal(1)
         any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any2)
         Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute1.Name = "namespace"
         attribute1.FixedValue = ds.Namespace
         type.Attributes.Add(attribute1)
         Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute2.Name = "tableTypeName"
         attribute2.FixedValue = "PedidoDataTable"
         type.Attributes.Add(attribute2)
         type.Particle = sequence
         Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
         If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
               Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
               dsSchema.Write(s1)
               Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
               Do While schemas.MoveNext
                  schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                  s2.SetLength(0)
                  schema.Write(s2)
                  If (s1.Length = s2.Length) Then
                     s1.Position = 0
                     s2.Position = 0

                     Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                     Loop
                     If (s1.Position = s1.Length) Then
                        Return type
                     End If
                  End If

               Loop
            Finally
               If (Not (s1) Is Nothing) Then
                  s1.Close()
               End If
               If (Not (s2) Is Nothing) Then
                  s2.Close()
               End If
            End Try
         End If
         xs.Add(dsSchema)
         Return type
      End Function
   End Class

   '''<summary>
   '''Represents the strongly named DataTable class.
   '''</summary>
   <Global.System.Serializable(),
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>
   Partial Public Class PedidoProductoDataTable
      Inherits Global.System.Data.TypedTableBase(Of PedidoProductoRow)

      Private columnNombreArchivo As Global.System.Data.DataColumn

      Private columnIdSucursal As Global.System.Data.DataColumn

      Private columnIdTipoComprobante As Global.System.Data.DataColumn

      Private columnLetra As Global.System.Data.DataColumn

      Private columnCentroEmisor As Global.System.Data.DataColumn

      Private columnNumeroPedido As Global.System.Data.DataColumn

      Private columnOrden As Global.System.Data.DataColumn

      Private columnIdProducto As Global.System.Data.DataColumn

      Private columnNombreProducto As Global.System.Data.DataColumn

      Private columnCantidad As Global.System.Data.DataColumn

      Private columnStock As Global.System.Data.DataColumn

      Private columnPrecio As Global.System.Data.DataColumn

      Private columnPrecioMovil As Global.System.Data.DataColumn

      Private columnIVA As Global.System.Data.DataColumn

      Private columnPrecioLista As Global.System.Data.DataColumn

      Private columnPorcDesc1 As Global.System.Data.DataColumn

      Private columnPorcDesc2 As Global.System.Data.DataColumn

      Private columnPrecioNeto As Global.System.Data.DataColumn

      Private columnImporteTotal As Global.System.Data.DataColumn

      Private columnCantidadSinCargo As Global.System.Data.DataColumn

      Private columnCantidadFaltante As Global.System.Data.DataColumn

      Private columnCantidadDevolucion As Global.System.Data.DataColumn

      Private columnIdListaPrecios As Global.System.Data.DataColumn

      Private columnNombreListaPrecios As Global.System.Data.DataColumn

      Private columnFechaEntrega As Global.System.Data.DataColumn

      Private columnCantidadCambio As Global.System.Data.DataColumn

      Private columnCantidadBonif As Global.System.Data.DataColumn

      Private columnNotaCambio As Global.System.Data.DataColumn

      Private columnNotaBonif As Global.System.Data.DataColumn

      Private columnEstado As Global.System.Data.DataColumn

      Private columnMensajeError As Global.System.Data.DataColumn

      Private columnConError_ProductoInexistente As Global.System.Data.DataColumn

      Private columnAdvertencia_ProductoConNovedades As Global.System.Data.DataColumn

      Private columnPrecioConIVA As Global.System.Data.DataColumn

      Private columnPrecioMovilConIVA As Global.System.Data.DataColumn

      Private columnPrecioListaConIVA As Global.System.Data.DataColumn

      Private columnPrecioNetoConIVA As Global.System.Data.DataColumn

      Private columnOrdenProducto As Global.System.Data.DataColumn

      Private columnNotaDevolucion As Global.System.Data.DataColumn

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub New()
         MyBase.New
         Me.TableName = "PedidoProducto"
         Me.BeginInit()
         Me.InitClass()
         Me.EndInit()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Friend Sub New(ByVal table As Global.System.Data.DataTable)
         MyBase.New
         Me.TableName = table.TableName
         If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
            Me.CaseSensitive = table.CaseSensitive
         End If
         If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
            Me.Locale = table.Locale
         End If
         If (table.Namespace <> table.DataSet.Namespace) Then
            Me.Namespace = table.Namespace
         End If
         Me.Prefix = table.Prefix
         Me.MinimumCapacity = table.MinimumCapacity
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
         MyBase.New(info, context)
         Me.InitVars()
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NombreArchivoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreArchivo
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdSucursalColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdSucursal
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdTipoComprobanteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdTipoComprobante
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property LetraColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnLetra
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property CentroEmisorColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnCentroEmisor
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NumeroPedidoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNumeroPedido
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property OrdenColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnOrden
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdProductoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdProducto
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NombreProductoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreProducto
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnCantidad
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property StockColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnStock
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PrecioColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPrecio
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PrecioMovilColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPrecioMovil
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IVAColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIVA
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PrecioListaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPrecioLista
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PorcDesc1Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnPorcDesc1
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PorcDesc2Column() As Global.System.Data.DataColumn
         Get
            Return Me.columnPorcDesc2
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PrecioNetoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPrecioNeto
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property ImporteTotalColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnImporteTotal
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property CantidadSinCargoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnCantidadSinCargo
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property CantidadFaltanteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnCantidadFaltante
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property CantidadDevolucionColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnCantidadDevolucion
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property IdListaPreciosColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnIdListaPrecios
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NombreListaPreciosColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNombreListaPrecios
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property FechaEntregaColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnFechaEntrega
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property CantidadCambioColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnCantidadCambio
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property CantidadBonifColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnCantidadBonif
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NotaCambioColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNotaCambio
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NotaBonifColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNotaBonif
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property EstadoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnEstado
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property MensajeErrorColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnMensajeError
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property ConError_ProductoInexistenteColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnConError_ProductoInexistente
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property Advertencia_ProductoConNovedadesColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnAdvertencia_ProductoConNovedades
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PrecioConIVAColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPrecioConIVA
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PrecioMovilConIVAColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPrecioMovilConIVA
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PrecioListaConIVAColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPrecioListaConIVA
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property PrecioNetoConIVAColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnPrecioNetoConIVA
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property OrdenProductoColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnOrdenProducto
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public ReadOnly Property NotaDevolucionColumn() As Global.System.Data.DataColumn
         Get
            Return Me.columnNotaDevolucion
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),
         Global.System.ComponentModel.Browsable(False)>
      Public ReadOnly Property Count() As Integer
         Get
            Return Me.Rows.Count
         End Get
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Default Public ReadOnly Property Item(ByVal index As Integer) As PedidoProductoRow
         Get
            Return CType(Me.Rows(index), PedidoProductoRow)
         End Get
      End Property

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Event PedidoProductoRowChanging As PedidoProductoRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Event PedidoProductoRowChanged As PedidoProductoRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Event PedidoProductoRowDeleting As PedidoProductoRowChangeEventHandler

      <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Event PedidoProductoRowDeleted As PedidoProductoRowChangeEventHandler

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Overloads Sub AddPedidoProductoRow(ByVal row As PedidoProductoRow)
         Me.Rows.Add(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Overloads Function AddPedidoProductoRow(
                    ByVal parentArchivoRowByArchivo_PedidoProducto As ArchivoRow,
                    ByVal IdSucursal As Integer,
                    ByVal IdTipoComprobante As String,
                    ByVal Letra As String,
                    ByVal CentroEmisor As Short,
                    ByVal NumeroPedido As Long,
                    ByVal Orden As Integer,
                    ByVal IdProducto As String,
                    ByVal NombreProducto As String,
                    ByVal Cantidad As Decimal,
                    ByVal Stock As Decimal,
                    ByVal Precio As Decimal,
                    ByVal PrecioMovil As Decimal,
                    ByVal IVA As Decimal,
                    ByVal PrecioLista As Decimal,
                    ByVal PorcDesc1 As Decimal,
                    ByVal PorcDesc2 As Decimal,
                    ByVal PrecioNeto As Decimal,
                    ByVal ImporteTotal As Decimal,
                    ByVal CantidadSinCargo As Decimal,
                    ByVal CantidadFaltante As Decimal,
                    ByVal CantidadDevolucion As Decimal,
                    ByVal IdListaPrecios As Integer,
                    ByVal NombreListaPrecios As String,
                    ByVal FechaEntrega As Date,
                    ByVal CantidadCambio As Decimal,
                    ByVal CantidadBonif As Decimal,
                    ByVal NotaCambio As String,
                    ByVal NotaBonif As String,
                    ByVal Estado As Object,
                    ByVal MensajeError As String,
                    ByVal ConError_ProductoInexistente As Boolean,
                    ByVal Advertencia_ProductoConNovedades As Boolean,
                    ByVal PrecioConIVA As Decimal,
                    ByVal PrecioMovilConIVA As Decimal,
                    ByVal PrecioListaConIVA As Decimal,
                    ByVal PrecioNetoConIVA As Decimal,
                    ByVal OrdenProducto As Integer,
                    ByVal NotaDevolucion As String) As PedidoProductoRow
         Dim rowPedidoProductoRow As PedidoProductoRow = CType(Me.NewRow, PedidoProductoRow)
         Dim columnValuesArray() As Object = New Object() {Nothing, IdSucursal, IdTipoComprobante, Letra, CentroEmisor, NumeroPedido, Orden, IdProducto, NombreProducto, Cantidad, Stock, Precio, PrecioMovil, IVA, PrecioLista, PorcDesc1, PorcDesc2, PrecioNeto, ImporteTotal, CantidadSinCargo, CantidadFaltante, CantidadDevolucion, IdListaPrecios, NombreListaPrecios, FechaEntrega, CantidadCambio, CantidadBonif, NotaCambio, NotaBonif, Estado, MensajeError, ConError_ProductoInexistente, Advertencia_ProductoConNovedades, PrecioConIVA, PrecioMovilConIVA, PrecioListaConIVA, PrecioNetoConIVA, OrdenProducto, NotaDevolucion}
         If (Not (parentArchivoRowByArchivo_PedidoProducto) Is Nothing) Then
            columnValuesArray(0) = parentArchivoRowByArchivo_PedidoProducto(4)
         End If
         rowPedidoProductoRow.ItemArray = columnValuesArray
         Me.Rows.Add(rowPedidoProductoRow)
         Return rowPedidoProductoRow
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function FindByNombreArchivoOrdenNumeroPedidoCentroEmisorLetraIdTipoComprobanteIdSucursal(ByVal NombreArchivo As String, ByVal Orden As Integer, ByVal NumeroPedido As Long, ByVal CentroEmisor As Short, ByVal Letra As String, ByVal IdTipoComprobante As String, ByVal IdSucursal As Integer) As PedidoProductoRow
         Return CType(Me.Rows.Find(New Object() {NombreArchivo, Orden, NumeroPedido, CentroEmisor, Letra, IdTipoComprobante, IdSucursal}), PedidoProductoRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Overrides Function Clone() As Global.System.Data.DataTable
         Dim cln As PedidoProductoDataTable = CType(MyBase.Clone, PedidoProductoDataTable)
         cln.InitVars()
         Return cln
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
         Return New PedidoProductoDataTable()
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Friend Sub InitVars()
         Me.columnNombreArchivo = MyBase.Columns("NombreArchivo")
         Me.columnIdSucursal = MyBase.Columns("IdSucursal")
         Me.columnIdTipoComprobante = MyBase.Columns("IdTipoComprobante")
         Me.columnLetra = MyBase.Columns("Letra")
         Me.columnCentroEmisor = MyBase.Columns("CentroEmisor")
         Me.columnNumeroPedido = MyBase.Columns("NumeroPedido")
         Me.columnOrden = MyBase.Columns("Orden")
         Me.columnIdProducto = MyBase.Columns("IdProducto")
         Me.columnNombreProducto = MyBase.Columns("NombreProducto")
         Me.columnCantidad = MyBase.Columns("Cantidad")
         Me.columnStock = MyBase.Columns("Stock")
         Me.columnPrecio = MyBase.Columns("Precio")
         Me.columnPrecioMovil = MyBase.Columns("PrecioMovil")
         Me.columnIVA = MyBase.Columns("IVA")
         Me.columnPrecioLista = MyBase.Columns("PrecioLista")
         Me.columnPorcDesc1 = MyBase.Columns("PorcDesc1")
         Me.columnPorcDesc2 = MyBase.Columns("PorcDesc2")
         Me.columnPrecioNeto = MyBase.Columns("PrecioNeto")
         Me.columnImporteTotal = MyBase.Columns("ImporteTotal")
         Me.columnCantidadSinCargo = MyBase.Columns("CantidadSinCargo")
         Me.columnCantidadFaltante = MyBase.Columns("CantidadFaltante")
         Me.columnCantidadDevolucion = MyBase.Columns("CantidadDevolucion")
         Me.columnIdListaPrecios = MyBase.Columns("IdListaPrecios")
         Me.columnNombreListaPrecios = MyBase.Columns("NombreListaPrecios")
         Me.columnFechaEntrega = MyBase.Columns("FechaEntrega")
         Me.columnCantidadCambio = MyBase.Columns("CantidadCambio")
         Me.columnCantidadBonif = MyBase.Columns("CantidadBonif")
         Me.columnNotaCambio = MyBase.Columns("NotaCambio")
         Me.columnNotaBonif = MyBase.Columns("NotaBonif")
         Me.columnEstado = MyBase.Columns("Estado")
         Me.columnMensajeError = MyBase.Columns("MensajeError")
         Me.columnConError_ProductoInexistente = MyBase.Columns("ConError_ProductoInexistente")
         Me.columnAdvertencia_ProductoConNovedades = MyBase.Columns("Advertencia_ProductoConNovedades")
         Me.columnPrecioConIVA = MyBase.Columns("PrecioConIVA")
         Me.columnPrecioMovilConIVA = MyBase.Columns("PrecioMovilConIVA")
         Me.columnPrecioListaConIVA = MyBase.Columns("PrecioListaConIVA")
         Me.columnPrecioNetoConIVA = MyBase.Columns("PrecioNetoConIVA")
         Me.columnOrdenProducto = MyBase.Columns("OrdenProducto")
         Me.columnNotaDevolucion = MyBase.Columns("NotaDevolucion")
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Private Sub InitClass()
         Me.columnNombreArchivo = New Global.System.Data.DataColumn("NombreArchivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreArchivo)
         Me.columnIdSucursal = New Global.System.Data.DataColumn("IdSucursal", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdSucursal)
         Me.columnIdTipoComprobante = New Global.System.Data.DataColumn("IdTipoComprobante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdTipoComprobante)
         Me.columnLetra = New Global.System.Data.DataColumn("Letra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnLetra)
         Me.columnCentroEmisor = New Global.System.Data.DataColumn("CentroEmisor", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnCentroEmisor)
         Me.columnNumeroPedido = New Global.System.Data.DataColumn("NumeroPedido", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNumeroPedido)
         Me.columnOrden = New Global.System.Data.DataColumn("Orden", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnOrden)
         Me.columnIdProducto = New Global.System.Data.DataColumn("IdProducto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdProducto)
         Me.columnNombreProducto = New Global.System.Data.DataColumn("NombreProducto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreProducto)
         Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnCantidad)
         Me.columnStock = New Global.System.Data.DataColumn("Stock", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnStock)
         Me.columnPrecio = New Global.System.Data.DataColumn("Precio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPrecio)
         Me.columnPrecioMovil = New Global.System.Data.DataColumn("PrecioMovil", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPrecioMovil)
         Me.columnIVA = New Global.System.Data.DataColumn("IVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIVA)
         Me.columnPrecioLista = New Global.System.Data.DataColumn("PrecioLista", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPrecioLista)
         Me.columnPorcDesc1 = New Global.System.Data.DataColumn("PorcDesc1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPorcDesc1)
         Me.columnPorcDesc2 = New Global.System.Data.DataColumn("PorcDesc2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPorcDesc2)
         Me.columnPrecioNeto = New Global.System.Data.DataColumn("PrecioNeto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPrecioNeto)
         Me.columnImporteTotal = New Global.System.Data.DataColumn("ImporteTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnImporteTotal)
         Me.columnCantidadSinCargo = New Global.System.Data.DataColumn("CantidadSinCargo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnCantidadSinCargo)
         Me.columnCantidadFaltante = New Global.System.Data.DataColumn("CantidadFaltante", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnCantidadFaltante)
         Me.columnCantidadDevolucion = New Global.System.Data.DataColumn("CantidadDevolucion", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnCantidadDevolucion)
         Me.columnIdListaPrecios = New Global.System.Data.DataColumn("IdListaPrecios", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnIdListaPrecios)
         Me.columnNombreListaPrecios = New Global.System.Data.DataColumn("NombreListaPrecios", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNombreListaPrecios)
         Me.columnFechaEntrega = New Global.System.Data.DataColumn("FechaEntrega", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnFechaEntrega)
         Me.columnCantidadCambio = New Global.System.Data.DataColumn("CantidadCambio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnCantidadCambio)
         Me.columnCantidadBonif = New Global.System.Data.DataColumn("CantidadBonif", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnCantidadBonif)
         Me.columnNotaCambio = New Global.System.Data.DataColumn("NotaCambio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNotaCambio)
         Me.columnNotaBonif = New Global.System.Data.DataColumn("NotaBonif", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNotaBonif)
         Me.columnEstado = New Global.System.Data.DataColumn("Estado", GetType(Object), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnEstado)
         Me.columnMensajeError = New Global.System.Data.DataColumn("MensajeError", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnMensajeError)
         Me.columnConError_ProductoInexistente = New Global.System.Data.DataColumn("ConError_ProductoInexistente", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnConError_ProductoInexistente)
         Me.columnAdvertencia_ProductoConNovedades = New Global.System.Data.DataColumn("Advertencia_ProductoConNovedades", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnAdvertencia_ProductoConNovedades)
         Me.columnPrecioConIVA = New Global.System.Data.DataColumn("PrecioConIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPrecioConIVA)
         Me.columnPrecioMovilConIVA = New Global.System.Data.DataColumn("PrecioMovilConIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPrecioMovilConIVA)
         Me.columnPrecioListaConIVA = New Global.System.Data.DataColumn("PrecioListaConIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPrecioListaConIVA)
         Me.columnPrecioNetoConIVA = New Global.System.Data.DataColumn("PrecioNetoConIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnPrecioNetoConIVA)
         Me.columnOrdenProducto = New Global.System.Data.DataColumn("OrdenProducto", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnOrdenProducto)
         Me.columnNotaDevolucion = New Global.System.Data.DataColumn("NotaDevolucion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
         MyBase.Columns.Add(Me.columnNotaDevolucion)
         Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnNombreArchivo, Me.columnOrden, Me.columnNumeroPedido, Me.columnCentroEmisor, Me.columnLetra, Me.columnIdTipoComprobante, Me.columnIdSucursal}, True))
         Me.columnNombreArchivo.AllowDBNull = False
         Me.columnIdSucursal.AllowDBNull = False
         Me.columnIdTipoComprobante.AllowDBNull = False
         Me.columnLetra.AllowDBNull = False
         Me.columnCentroEmisor.AllowDBNull = False
         Me.columnNumeroPedido.AllowDBNull = False
         Me.columnOrden.AllowDBNull = False
         Me.columnCantidad.DefaultValue = CType(0D, Decimal)
         Me.columnStock.DefaultValue = CType(0D, Decimal)
         Me.columnPrecio.DefaultValue = CType(0D, Decimal)
         Me.columnIVA.DefaultValue = CType(0D, Decimal)
         Me.columnPrecioLista.DefaultValue = CType(0D, Decimal)
         Me.columnPorcDesc1.DefaultValue = CType(0D, Decimal)
         Me.columnPorcDesc2.DefaultValue = CType(0D, Decimal)
         Me.columnPrecioNeto.DefaultValue = CType(0D, Decimal)
         Me.columnImporteTotal.DefaultValue = CType(0D, Decimal)
         Me.columnCantidadSinCargo.DefaultValue = CType(0D, Decimal)
         Me.columnCantidadFaltante.DefaultValue = CType(0D, Decimal)
         Me.columnCantidadDevolucion.DefaultValue = CType(0D, Decimal)
         Me.columnCantidadCambio.DefaultValue = CType(0D, Decimal)
         Me.columnCantidadBonif.DefaultValue = CType(0D, Decimal)
         Me.columnConError_ProductoInexistente.DefaultValue = CType(False, Boolean)
         Me.columnAdvertencia_ProductoConNovedades.DefaultValue = CType(False, Boolean)
         Me.columnPrecioConIVA.DefaultValue = CType(0D, Decimal)
         Me.columnPrecioMovilConIVA.DefaultValue = CType(0D, Decimal)
         Me.columnPrecioListaConIVA.DefaultValue = CType(0D, Decimal)
         Me.columnPrecioNetoConIVA.DefaultValue = CType(0D, Decimal)
         Me.columnOrdenProducto.DefaultValue = CType(0, Integer)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function NewPedidoProductoRow() As PedidoProductoRow
         Return CType(Me.NewRow, PedidoProductoRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
         Return New PedidoProductoRow(builder)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Function GetRowType() As Global.System.Type
         Return GetType(PedidoProductoRow)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanged(e)
         If (Not (Me.PedidoProductoRowChangedEvent) Is Nothing) Then
            RaiseEvent PedidoProductoRowChanged(Me, New PedidoProductoRowChangeEvent(CType(e.Row, PedidoProductoRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowChanging(e)
         If (Not (Me.PedidoProductoRowChangingEvent) Is Nothing) Then
            RaiseEvent PedidoProductoRowChanging(Me, New PedidoProductoRowChangeEvent(CType(e.Row, PedidoProductoRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleted(e)
         If (Not (Me.PedidoProductoRowDeletedEvent) Is Nothing) Then
            RaiseEvent PedidoProductoRowDeleted(Me, New PedidoProductoRowChangeEvent(CType(e.Row, PedidoProductoRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
         MyBase.OnRowDeleting(e)
         If (Not (Me.PedidoProductoRowDeletingEvent) Is Nothing) Then
            RaiseEvent PedidoProductoRowDeleting(Me, New PedidoProductoRowChangeEvent(CType(e.Row, PedidoProductoRow), e.Action))
         End If
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub RemovePedidoProductoRow(ByVal row As PedidoProductoRow)
         Me.Rows.Remove(row)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
         Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
         Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
         Dim ds As DsPreventa = New DsPreventa()
         Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any1.Namespace = "http://www.w3.org/2001/XMLSchema"
         any1.MinOccurs = New Decimal(0)
         any1.MaxOccurs = Decimal.MaxValue
         any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any1)
         Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
         any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
         any2.MinOccurs = New Decimal(1)
         any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
         sequence.Items.Add(any2)
         Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute1.Name = "namespace"
         attribute1.FixedValue = ds.Namespace
         type.Attributes.Add(attribute1)
         Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
         attribute2.Name = "tableTypeName"
         attribute2.FixedValue = "PedidoProductoDataTable"
         type.Attributes.Add(attribute2)
         type.Particle = sequence
         Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
         If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
               Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
               dsSchema.Write(s1)
               Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
               Do While schemas.MoveNext
                  schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                  s2.SetLength(0)
                  schema.Write(s2)
                  If (s1.Length = s2.Length) Then
                     s1.Position = 0
                     s2.Position = 0

                     Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                     Loop
                     If (s1.Position = s1.Length) Then
                        Return type
                     End If
                  End If

               Loop
            Finally
               If (Not (s1) Is Nothing) Then
                  s1.Close()
               End If
               If (Not (s2) Is Nothing) Then
                  s2.Close()
               End If
            End Try
         End If
         xs.Add(dsSchema)
         Return type
      End Function
   End Class

   '''<summary>
   '''Represents strongly named DataRow class.
   '''</summary>
   Partial Public Class ArchivoRow
      Inherits Global.System.Data.DataRow

      Private tableArchivo As ArchivoDataTable

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
         MyBase.New(rb)
         Me.tableArchivo = CType(Me.Table, ArchivoDataTable)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdRuta() As Integer
         Get
            Try
               Return CType(Me(Me.tableArchivo.IdRutaColumn), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IdRuta' de la tabla 'Archivo' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tableArchivo.IdRutaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NombreRuta() As String
         Get
            Try
               Return CType(Me(Me.tableArchivo.NombreRutaColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreRuta' de la tabla 'Archivo' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tableArchivo.NombreRutaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdVendedor() As Integer
         Get
            Try
               Return CType(Me(Me.tableArchivo.IdVendedorColumn), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IdVendedor' de la tabla 'Archivo' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tableArchivo.IdVendedorColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NombreVendedor() As String
         Get
            Try
               Return CType(Me(Me.tableArchivo.NombreVendedorColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreVendedor' de la tabla 'Archivo' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tableArchivo.NombreVendedorColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NombreArchivo() As String
         Get
            Return CType(Me(Me.tableArchivo.NombreArchivoColumn), String)
         End Get
         Set
            Me(Me.tableArchivo.NombreArchivoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PathCompletoArchivo() As String
         Get
            Try
               Return CType(Me(Me.tableArchivo.PathCompletoArchivoColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PathCompletoArchivo' de la tabla 'Archivo' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tableArchivo.PathCompletoArchivoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property FormatoArchivo() As Object
         Get
            Try
               Return CType(Me(Me.tableArchivo.FormatoArchivoColumn), Object)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FormatoArchivo' de la tabla 'Archivo' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tableArchivo.FormatoArchivoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsIdRutaNull() As Boolean
         Return Me.IsNull(Me.tableArchivo.IdRutaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetIdRutaNull()
         Me(Me.tableArchivo.IdRutaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNombreRutaNull() As Boolean
         Return Me.IsNull(Me.tableArchivo.NombreRutaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNombreRutaNull()
         Me(Me.tableArchivo.NombreRutaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsIdVendedorNull() As Boolean
         Return Me.IsNull(Me.tableArchivo.IdVendedorColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetIdVendedorNull()
         Me(Me.tableArchivo.IdVendedorColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNombreVendedorNull() As Boolean
         Return Me.IsNull(Me.tableArchivo.NombreVendedorColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNombreVendedorNull()
         Me(Me.tableArchivo.NombreVendedorColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPathCompletoArchivoNull() As Boolean
         Return Me.IsNull(Me.tableArchivo.PathCompletoArchivoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPathCompletoArchivoNull()
         Me(Me.tableArchivo.PathCompletoArchivoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsFormatoArchivoNull() As Boolean
         Return Me.IsNull(Me.tableArchivo.FormatoArchivoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetFormatoArchivoNull()
         Me(Me.tableArchivo.FormatoArchivoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function GetPedidoRows() As PedidoRow()
         If (Me.Table.ChildRelations("Archivo_DataTable1") Is Nothing) Then
            Return New PedidoRow(-1) {}
         Else
            Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Archivo_DataTable1")), PedidoRow())
         End If
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function GetPedidoProductoRows() As PedidoProductoRow()
         If (Me.Table.ChildRelations("Archivo_PedidoProducto") Is Nothing) Then
            Return New PedidoProductoRow(-1) {}
         Else
            Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Archivo_PedidoProducto")), PedidoProductoRow())
         End If
      End Function
   End Class

   '''<summary>
   '''Represents strongly named DataRow class.
   '''</summary>
   Partial Public Class PedidoRow
      Inherits Global.System.Data.DataRow

      Private tablePedido As PedidoDataTable

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
         MyBase.New(rb)
         Me.tablePedido = CType(Me.Table, PedidoDataTable)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NombreArchivo() As String
         Get
            Return CType(Me(Me.tablePedido.NombreArchivoColumn), String)
         End Get
         Set
            Me(Me.tablePedido.NombreArchivoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdSucursal() As Integer
         Get
            Return CType(Me(Me.tablePedido.IdSucursalColumn), Integer)
         End Get
         Set
            Me(Me.tablePedido.IdSucursalColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdTipoComprobante() As String
         Get
            Return CType(Me(Me.tablePedido.IdTipoComprobanteColumn), String)
         End Get
         Set
            Me(Me.tablePedido.IdTipoComprobanteColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property Letra() As String
         Get
            Return CType(Me(Me.tablePedido.LetraColumn), String)
         End Get
         Set
            Me(Me.tablePedido.LetraColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property CentroEmisor() As Short
         Get
            Return CType(Me(Me.tablePedido.CentroEmisorColumn), Short)
         End Get
         Set
            Me(Me.tablePedido.CentroEmisorColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NumeroPedido() As Long
         Get
            Return CType(Me(Me.tablePedido.NumeroPedidoColumn), Long)
         End Get
         Set
            Me(Me.tablePedido.NumeroPedidoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property Pasa() As Boolean
         Get
            Try
               Return CType(Me(Me.tablePedido.PasaColumn), Boolean)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Pasa' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.PasaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdRuta() As Integer
         Get
            Try
               Return CType(Me(Me.tablePedido.IdRutaColumn), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IdRuta' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.IdRutaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NombreRuta() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.NombreRutaColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreRuta' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.NombreRutaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property Estado() As Object
         Get
            Try
               Return CType(Me(Me.tablePedido.EstadoColumn), Object)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Estado' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.EstadoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property MensajeError() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.MensajeErrorColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MensajeError' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.MensajeErrorColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property FechaPedido() As Date
         Get
            Try
               Return CType(Me(Me.tablePedido.FechaPedidoColumn), Date)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaPedido' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.FechaPedidoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdCliente() As Long
         Get
            Try
               Return CType(Me(Me.tablePedido.IdClienteColumn), Long)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IdCliente' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.IdClienteColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property CodigoCliente() As Long
         Get
            Try
               Return CType(Me(Me.tablePedido.CodigoClienteColumn), Long)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoCliente' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.CodigoClienteColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property TipoDocCliente() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.TipoDocClienteColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TipoDocCliente' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.TipoDocClienteColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NroDocCliente() As Long
         Get
            Try
               Return CType(Me(Me.tablePedido.NroDocClienteColumn), Long)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NroDocCliente' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.NroDocClienteColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NombreCliente() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.NombreClienteColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreCliente' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.NombreClienteColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property Direccion() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.DireccionColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Direccion' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.DireccionColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NombreCategoriaFiscalAbrev() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.NombreCategoriaFiscalAbrevColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreCategoriaFiscalAbrev' de la tabla 'Pedido' es DBNul" &
                            "l.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.NombreCategoriaFiscalAbrevColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property CUIT() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.CUITColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUIT' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.CUITColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdTransportista() As Integer
         Get
            Try
               Return CType(Me(Me.tablePedido.IdTransportistaColumn), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IdTransportista' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.IdTransportistaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NombreTransportista() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.NombreTransportistaColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreTransportista' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.NombreTransportistaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdEstadoVenta() As Integer
         Get
            Try
               Return CType(Me(Me.tablePedido.IdEstadoVentaColumn), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IdEstadoVenta' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.IdEstadoVentaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NombreEstadoVenta() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.NombreEstadoVentaColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreEstadoVenta' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.NombreEstadoVentaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property Observaciones() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.ObservacionesColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Observaciones' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.ObservacionesColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property ImporteTotal() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedido.ImporteTotalColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteTotal' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.ImporteTotalColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PorcDesc() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedido.PorcDescColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PorcDesc' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.PorcDescColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdWeb() As Long
         Get
            Try
               Return CType(Me(Me.tablePedido.IdWebColumn), Long)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IdWeb' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.IdWebColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdTipoComprobanteFact() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.IdTipoComprobanteFactColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IdTipoComprobanteFact' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.IdTipoComprobanteFactColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdFormasPago() As Integer
         Get
            Try
               Return CType(Me(Me.tablePedido.IdFormasPagoColumn), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IdFormasPago' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.IdFormasPagoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property FechaPedido_Fecha() As Date
         Get
            Try
               Return CType(Me(Me.tablePedido.FechaPedido_FechaColumn), Date)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaPedido_Fecha' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.FechaPedido_FechaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property FechaPedido_Hora() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.FechaPedido_HoraColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaPedido_Hora' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.FechaPedido_HoraColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property FechaRecepcionWeb() As Date
         Get
            Try
               Return CType(Me(Me.tablePedido.FechaRecepcionWebColumn), Date)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaRecepcionWeb' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.FechaRecepcionWebColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PedidoWeb() As Object
         Get
            Try
               Return CType(Me(Me.tablePedido.PedidoWebColumn), Object)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PedidoWeb' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.PedidoWebColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property ConError_FaltaTransportista() As Boolean
         Get
            Try
               Return CType(Me(Me.tablePedido.ConError_FaltaTransportistaColumn), Boolean)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ConError_FaltaTransportista' de la tabla 'Pedido' es DBNu" &
                            "ll.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.ConError_FaltaTransportistaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property ConError_EstadoVisitaInexistente() As Boolean
         Get
            Try
               Return CType(Me(Me.tablePedido.ConError_EstadoVisitaInexistenteColumn), Boolean)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ConError_EstadoVisitaInexistente' de la tabla 'Pedido' es" &
                            " DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.ConError_EstadoVisitaInexistenteColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property ConError_ClienteInexistente() As Boolean
         Get
            Try
               Return CType(Me(Me.tablePedido.ConError_ClienteInexistenteColumn), Boolean)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ConError_ClienteInexistente' de la tabla 'Pedido' es DBNu" &
                            "ll.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.ConError_ClienteInexistenteColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property ConError_PedidoYaExiste() As Boolean
         Get
            Try
               Return CType(Me(Me.tablePedido.ConError_PedidoYaExisteColumn), Boolean)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ConError_PedidoYaExiste' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.ConError_PedidoYaExisteColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property EstadoGrabacion() As String
         Get
            Try
               Return CType(Me(Me.tablePedido.EstadoGrabacionColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EstadoGrabacion' de la tabla 'Pedido' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedido.EstadoGrabacionColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NroVersionRemoto() As String
         Get
            If Me.IsNroVersionRemotoNull Then
               Return String.Empty
            Else
               Return CType(Me(Me.tablePedido.NroVersionRemotoColumn), String)
            End If
         End Get
         Set
            Me(Me.tablePedido.NroVersionRemotoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property ArchivoRow() As ArchivoRow
         Get
            Return CType(Me.GetParentRow(Me.Table.ParentRelations("Archivo_DataTable1")), ArchivoRow)
         End Get
         Set
            Me.SetParentRow(Value, Me.Table.ParentRelations("Archivo_DataTable1"))
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPasaNull() As Boolean
         Return Me.IsNull(Me.tablePedido.PasaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPasaNull()
         Me(Me.tablePedido.PasaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsIdRutaNull() As Boolean
         Return Me.IsNull(Me.tablePedido.IdRutaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetIdRutaNull()
         Me(Me.tablePedido.IdRutaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNombreRutaNull() As Boolean
         Return Me.IsNull(Me.tablePedido.NombreRutaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNombreRutaNull()
         Me(Me.tablePedido.NombreRutaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsEstadoNull() As Boolean
         Return Me.IsNull(Me.tablePedido.EstadoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetEstadoNull()
         Me(Me.tablePedido.EstadoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsMensajeErrorNull() As Boolean
         Return Me.IsNull(Me.tablePedido.MensajeErrorColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetMensajeErrorNull()
         Me(Me.tablePedido.MensajeErrorColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsFechaPedidoNull() As Boolean
         Return Me.IsNull(Me.tablePedido.FechaPedidoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetFechaPedidoNull()
         Me(Me.tablePedido.FechaPedidoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsIdClienteNull() As Boolean
         Return Me.IsNull(Me.tablePedido.IdClienteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetIdClienteNull()
         Me(Me.tablePedido.IdClienteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsCodigoClienteNull() As Boolean
         Return Me.IsNull(Me.tablePedido.CodigoClienteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetCodigoClienteNull()
         Me(Me.tablePedido.CodigoClienteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsTipoDocClienteNull() As Boolean
         Return Me.IsNull(Me.tablePedido.TipoDocClienteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetTipoDocClienteNull()
         Me(Me.tablePedido.TipoDocClienteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNroDocClienteNull() As Boolean
         Return Me.IsNull(Me.tablePedido.NroDocClienteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNroDocClienteNull()
         Me(Me.tablePedido.NroDocClienteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNombreClienteNull() As Boolean
         Return Me.IsNull(Me.tablePedido.NombreClienteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNombreClienteNull()
         Me(Me.tablePedido.NombreClienteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsDireccionNull() As Boolean
         Return Me.IsNull(Me.tablePedido.DireccionColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetDireccionNull()
         Me(Me.tablePedido.DireccionColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNombreCategoriaFiscalAbrevNull() As Boolean
         Return Me.IsNull(Me.tablePedido.NombreCategoriaFiscalAbrevColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNombreCategoriaFiscalAbrevNull()
         Me(Me.tablePedido.NombreCategoriaFiscalAbrevColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsCUITNull() As Boolean
         Return Me.IsNull(Me.tablePedido.CUITColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetCUITNull()
         Me(Me.tablePedido.CUITColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsIdTransportistaNull() As Boolean
         Return Me.IsNull(Me.tablePedido.IdTransportistaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetIdTransportistaNull()
         Me(Me.tablePedido.IdTransportistaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNombreTransportistaNull() As Boolean
         Return Me.IsNull(Me.tablePedido.NombreTransportistaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNombreTransportistaNull()
         Me(Me.tablePedido.NombreTransportistaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsIdEstadoVentaNull() As Boolean
         Return Me.IsNull(Me.tablePedido.IdEstadoVentaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetIdEstadoVentaNull()
         Me(Me.tablePedido.IdEstadoVentaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNombreEstadoVentaNull() As Boolean
         Return Me.IsNull(Me.tablePedido.NombreEstadoVentaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNombreEstadoVentaNull()
         Me(Me.tablePedido.NombreEstadoVentaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsObservacionesNull() As Boolean
         Return Me.IsNull(Me.tablePedido.ObservacionesColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetObservacionesNull()
         Me(Me.tablePedido.ObservacionesColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsImporteTotalNull() As Boolean
         Return Me.IsNull(Me.tablePedido.ImporteTotalColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetImporteTotalNull()
         Me(Me.tablePedido.ImporteTotalColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPorcDescNull() As Boolean
         Return Me.IsNull(Me.tablePedido.PorcDescColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPorcDescNull()
         Me(Me.tablePedido.PorcDescColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsIdWebNull() As Boolean
         Return Me.IsNull(Me.tablePedido.IdWebColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetIdWebNull()
         Me(Me.tablePedido.IdWebColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsIdTipoComprobanteFactNull() As Boolean
         Return Me.IsNull(Me.tablePedido.IdTipoComprobanteFactColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetIdTipoComprobanteFactNull()
         Me(Me.tablePedido.IdTipoComprobanteFactColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsIdFormasPagoNull() As Boolean
         Return Me.IsNull(Me.tablePedido.IdFormasPagoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetIdFormasPagoNull()
         Me(Me.tablePedido.IdFormasPagoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsFechaPedido_FechaNull() As Boolean
         Return Me.IsNull(Me.tablePedido.FechaPedido_FechaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetFechaPedido_FechaNull()
         Me(Me.tablePedido.FechaPedido_FechaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsFechaPedido_HoraNull() As Boolean
         Return Me.IsNull(Me.tablePedido.FechaPedido_HoraColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetFechaPedido_HoraNull()
         Me(Me.tablePedido.FechaPedido_HoraColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsFechaRecepcionWebNull() As Boolean
         Return Me.IsNull(Me.tablePedido.FechaRecepcionWebColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetFechaRecepcionWebNull()
         Me(Me.tablePedido.FechaRecepcionWebColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPedidoWebNull() As Boolean
         Return Me.IsNull(Me.tablePedido.PedidoWebColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPedidoWebNull()
         Me(Me.tablePedido.PedidoWebColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsConError_FaltaTransportistaNull() As Boolean
         Return Me.IsNull(Me.tablePedido.ConError_FaltaTransportistaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetConError_FaltaTransportistaNull()
         Me(Me.tablePedido.ConError_FaltaTransportistaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsConError_EstadoVisitaInexistenteNull() As Boolean
         Return Me.IsNull(Me.tablePedido.ConError_EstadoVisitaInexistenteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetConError_EstadoVisitaInexistenteNull()
         Me(Me.tablePedido.ConError_EstadoVisitaInexistenteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsConError_ClienteInexistenteNull() As Boolean
         Return Me.IsNull(Me.tablePedido.ConError_ClienteInexistenteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetConError_ClienteInexistenteNull()
         Me(Me.tablePedido.ConError_ClienteInexistenteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsConError_PedidoYaExisteNull() As Boolean
         Return Me.IsNull(Me.tablePedido.ConError_PedidoYaExisteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetConError_PedidoYaExisteNull()
         Me(Me.tablePedido.ConError_PedidoYaExisteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsEstadoGrabacionNull() As Boolean
         Return Me.IsNull(Me.tablePedido.EstadoGrabacionColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetEstadoGrabacionNull()
         Me(Me.tablePedido.EstadoGrabacionColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNroVersionRemotoNull() As Boolean
         Return Me.IsNull(Me.tablePedido.NroVersionRemotoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNroVersionRemotoNull()
         Me(Me.tablePedido.NroVersionRemotoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function GetPedidoProductoRows() As PedidoProductoRow()
         If (Me.Table.ChildRelations("Pedido_PedidoProducto") Is Nothing) Then
            Return New PedidoProductoRow(-1) {}
         Else
            Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Pedido_PedidoProducto")), PedidoProductoRow())
         End If
      End Function
   End Class

   '''<summary>
   '''Represents strongly named DataRow class.
   '''</summary>
   Partial Public Class PedidoProductoRow
      Inherits Global.System.Data.DataRow

      Private tablePedidoProducto As PedidoProductoDataTable

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
         MyBase.New(rb)
         Me.tablePedidoProducto = CType(Me.Table, PedidoProductoDataTable)
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NombreArchivo() As String
         Get
            Return CType(Me(Me.tablePedidoProducto.NombreArchivoColumn), String)
         End Get
         Set
            Me(Me.tablePedidoProducto.NombreArchivoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdSucursal() As Integer
         Get
            Return CType(Me(Me.tablePedidoProducto.IdSucursalColumn), Integer)
         End Get
         Set
            Me(Me.tablePedidoProducto.IdSucursalColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdTipoComprobante() As String
         Get
            Return CType(Me(Me.tablePedidoProducto.IdTipoComprobanteColumn), String)
         End Get
         Set
            Me(Me.tablePedidoProducto.IdTipoComprobanteColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property Letra() As String
         Get
            Return CType(Me(Me.tablePedidoProducto.LetraColumn), String)
         End Get
         Set
            Me(Me.tablePedidoProducto.LetraColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property CentroEmisor() As Short
         Get
            Return CType(Me(Me.tablePedidoProducto.CentroEmisorColumn), Short)
         End Get
         Set
            Me(Me.tablePedidoProducto.CentroEmisorColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NumeroPedido() As Long
         Get
            Return CType(Me(Me.tablePedidoProducto.NumeroPedidoColumn), Long)
         End Get
         Set
            Me(Me.tablePedidoProducto.NumeroPedidoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property Orden() As Integer
         Get
            Return CType(Me(Me.tablePedidoProducto.OrdenColumn), Integer)
         End Get
         Set
            Me(Me.tablePedidoProducto.OrdenColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdProducto() As String
         Get
            If Me.IsIdProductoNull Then
               Return String.Empty
            Else
               Return CType(Me(Me.tablePedidoProducto.IdProductoColumn), String)
            End If
         End Get
         Set
            Me(Me.tablePedidoProducto.IdProductoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NombreProducto() As String
         Get
            If Me.IsNombreProductoNull Then
               Return String.Empty
            Else
               Return CType(Me(Me.tablePedidoProducto.NombreProductoColumn), String)
            End If
         End Get
         Set
            Me(Me.tablePedidoProducto.NombreProductoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property Cantidad() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.CantidadColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Cantidad' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.CantidadColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property Stock() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.StockColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Stock' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.StockColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property Precio() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.PrecioColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Precio' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.PrecioColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PrecioMovil() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.PrecioMovilColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioMovil' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.PrecioMovilColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IVA() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.IVAColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IVA' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.IVAColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PrecioLista() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.PrecioListaColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioLista' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.PrecioListaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PorcDesc1() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.PorcDesc1Column), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PorcDesc1' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.PorcDesc1Column) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PorcDesc2() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.PorcDesc2Column), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PorcDesc2' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.PorcDesc2Column) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PrecioNeto() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.PrecioNetoColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioNeto' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.PrecioNetoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property ImporteTotal() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.ImporteTotalColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImporteTotal' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.ImporteTotalColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property CantidadSinCargo() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.CantidadSinCargoColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CantidadSinCargo' de la tabla 'PedidoProducto' es DBNull." &
                            "", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.CantidadSinCargoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property CantidadFaltante() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.CantidadFaltanteColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CantidadFaltante' de la tabla 'PedidoProducto' es DBNull." &
                            "", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.CantidadFaltanteColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property CantidadDevolucion() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.CantidadDevolucionColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CantidadDevolucion' de la tabla 'PedidoProducto' es DBNul" &
                            "l.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.CantidadDevolucionColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property IdListaPrecios() As Integer
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.IdListaPreciosColumn), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IdListaPrecios' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.IdListaPreciosColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NombreListaPrecios() As String
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.NombreListaPreciosColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreListaPrecios' de la tabla 'PedidoProducto' es DBNul" &
                            "l.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.NombreListaPreciosColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property FechaEntrega() As Date
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.FechaEntregaColumn), Date)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaEntrega' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.FechaEntregaColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property CantidadCambio() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.CantidadCambioColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CantidadCambio' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.CantidadCambioColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property CantidadBonif() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.CantidadBonifColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CantidadBonif' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.CantidadBonifColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NotaCambio() As String
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.NotaCambioColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NotaCambio' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.NotaCambioColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NotaBonif() As String
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.NotaBonifColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NotaBonif' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.NotaBonifColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property Estado() As Object
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.EstadoColumn), Object)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Estado' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.EstadoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property MensajeError() As String
         Get
            If Me.IsMensajeErrorNull Then
               Return String.Empty
            Else
               Return CType(Me(Me.tablePedidoProducto.MensajeErrorColumn), String)
            End If
         End Get
         Set
            Me(Me.tablePedidoProducto.MensajeErrorColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property ConError_ProductoInexistente() As Boolean
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.ConError_ProductoInexistenteColumn), Boolean)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ConError_ProductoInexistente' de la tabla 'PedidoProducto" &
                            "' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.ConError_ProductoInexistenteColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property Advertencia_ProductoConNovedades() As Boolean
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.Advertencia_ProductoConNovedadesColumn), Boolean)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Advertencia_ProductoConNovedades' de la tabla 'PedidoProd" &
                            "ucto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.Advertencia_ProductoConNovedadesColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PrecioConIVA() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.PrecioConIVAColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioConIVA' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.PrecioConIVAColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PrecioMovilConIVA() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.PrecioMovilConIVAColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioMovilConIVA' de la tabla 'PedidoProducto' es DBNull" &
                            ".", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.PrecioMovilConIVAColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PrecioListaConIVA() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.PrecioListaConIVAColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioListaConIVA' de la tabla 'PedidoProducto' es DBNull" &
                            ".", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.PrecioListaConIVAColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PrecioNetoConIVA() As Decimal
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.PrecioNetoConIVAColumn), Decimal)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioNetoConIVA' de la tabla 'PedidoProducto' es DBNull." &
                            "", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.PrecioNetoConIVAColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property OrdenProducto() As Integer
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.OrdenProductoColumn), Integer)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OrdenProducto' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.OrdenProductoColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property NotaDevolucion() As String
         Get
            Try
               Return CType(Me(Me.tablePedidoProducto.NotaDevolucionColumn), String)
            Catch e As Global.System.InvalidCastException
               Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NotaDevolucion' de la tabla 'PedidoProducto' es DBNull.", e)
            End Try
         End Get
         Set
            Me(Me.tablePedidoProducto.NotaDevolucionColumn) = Value
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property ArchivoRow() As ArchivoRow
         Get
            Return CType(Me.GetParentRow(Me.Table.ParentRelations("Archivo_PedidoProducto")), ArchivoRow)
         End Get
         Set
            Me.SetParentRow(Value, Me.Table.ParentRelations("Archivo_PedidoProducto"))
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Property PedidoRowParent() As PedidoRow
         Get
            Return CType(Me.GetParentRow(Me.Table.ParentRelations("Pedido_PedidoProducto")), PedidoRow)
         End Get
         Set
            Me.SetParentRow(Value, Me.Table.ParentRelations("Pedido_PedidoProducto"))
         End Set
      End Property

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsIdProductoNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.IdProductoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetIdProductoNull()
         Me(Me.tablePedidoProducto.IdProductoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNombreProductoNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.NombreProductoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNombreProductoNull()
         Me(Me.tablePedidoProducto.NombreProductoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsCantidadNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.CantidadColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetCantidadNull()
         Me(Me.tablePedidoProducto.CantidadColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsStockNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.StockColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetStockNull()
         Me(Me.tablePedidoProducto.StockColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPrecioNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.PrecioColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPrecioNull()
         Me(Me.tablePedidoProducto.PrecioColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPrecioMovilNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.PrecioMovilColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPrecioMovilNull()
         Me(Me.tablePedidoProducto.PrecioMovilColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsIVANull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.IVAColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetIVANull()
         Me(Me.tablePedidoProducto.IVAColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPrecioListaNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.PrecioListaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPrecioListaNull()
         Me(Me.tablePedidoProducto.PrecioListaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPorcDesc1Null() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.PorcDesc1Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPorcDesc1Null()
         Me(Me.tablePedidoProducto.PorcDesc1Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPorcDesc2Null() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.PorcDesc2Column)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPorcDesc2Null()
         Me(Me.tablePedidoProducto.PorcDesc2Column) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPrecioNetoNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.PrecioNetoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPrecioNetoNull()
         Me(Me.tablePedidoProducto.PrecioNetoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsImporteTotalNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.ImporteTotalColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetImporteTotalNull()
         Me(Me.tablePedidoProducto.ImporteTotalColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsCantidadSinCargoNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.CantidadSinCargoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetCantidadSinCargoNull()
         Me(Me.tablePedidoProducto.CantidadSinCargoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsCantidadFaltanteNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.CantidadFaltanteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetCantidadFaltanteNull()
         Me(Me.tablePedidoProducto.CantidadFaltanteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsCantidadDevolucionNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.CantidadDevolucionColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetCantidadDevolucionNull()
         Me(Me.tablePedidoProducto.CantidadDevolucionColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsIdListaPreciosNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.IdListaPreciosColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetIdListaPreciosNull()
         Me(Me.tablePedidoProducto.IdListaPreciosColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNombreListaPreciosNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.NombreListaPreciosColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNombreListaPreciosNull()
         Me(Me.tablePedidoProducto.NombreListaPreciosColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsFechaEntregaNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.FechaEntregaColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetFechaEntregaNull()
         Me(Me.tablePedidoProducto.FechaEntregaColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsCantidadCambioNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.CantidadCambioColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetCantidadCambioNull()
         Me(Me.tablePedidoProducto.CantidadCambioColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsCantidadBonifNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.CantidadBonifColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetCantidadBonifNull()
         Me(Me.tablePedidoProducto.CantidadBonifColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNotaCambioNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.NotaCambioColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNotaCambioNull()
         Me(Me.tablePedidoProducto.NotaCambioColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNotaBonifNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.NotaBonifColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNotaBonifNull()
         Me(Me.tablePedidoProducto.NotaBonifColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsEstadoNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.EstadoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetEstadoNull()
         Me(Me.tablePedidoProducto.EstadoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsMensajeErrorNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.MensajeErrorColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetMensajeErrorNull()
         Me(Me.tablePedidoProducto.MensajeErrorColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsConError_ProductoInexistenteNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.ConError_ProductoInexistenteColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetConError_ProductoInexistenteNull()
         Me(Me.tablePedidoProducto.ConError_ProductoInexistenteColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsAdvertencia_ProductoConNovedadesNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.Advertencia_ProductoConNovedadesColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetAdvertencia_ProductoConNovedadesNull()
         Me(Me.tablePedidoProducto.Advertencia_ProductoConNovedadesColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPrecioConIVANull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.PrecioConIVAColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPrecioConIVANull()
         Me(Me.tablePedidoProducto.PrecioConIVAColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPrecioMovilConIVANull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.PrecioMovilConIVAColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPrecioMovilConIVANull()
         Me(Me.tablePedidoProducto.PrecioMovilConIVAColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPrecioListaConIVANull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.PrecioListaConIVAColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPrecioListaConIVANull()
         Me(Me.tablePedidoProducto.PrecioListaConIVAColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsPrecioNetoConIVANull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.PrecioNetoConIVAColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetPrecioNetoConIVANull()
         Me(Me.tablePedidoProducto.PrecioNetoConIVAColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsOrdenProductoNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.OrdenProductoColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetOrdenProductoNull()
         Me(Me.tablePedidoProducto.OrdenProductoColumn) = Global.System.Convert.DBNull
      End Sub

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Function IsNotaDevolucionNull() As Boolean
         Return Me.IsNull(Me.tablePedidoProducto.NotaDevolucionColumn)
      End Function

      <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>
      Public Sub SetNotaDevolucionNull()
         Me(Me.tablePedidoProducto.NotaDevolucionColumn) = Global.System.Convert.DBNull
      End Sub
   End Class

   '''<summary>
   '''Row event argument class
   '''</summary>
   <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class ArchivoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ArchivoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As ArchivoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As ArchivoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class PedidoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PedidoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As PedidoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As PedidoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class PedidoProductoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PedidoProductoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As PedidoProductoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As PedidoProductoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
